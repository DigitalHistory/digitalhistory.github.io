<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HIS393: Digital History</title>
    <link>http://digitalhistory.github.io/</link>
    <description>Recent content on HIS393: Digital History</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 14 Dec 2017 18:36:24 +0200</lastBuildDate>
    
	<atom:link href="http://digitalhistory.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Quick JS Operator review</title>
      <link>http://digitalhistory.github.io/tools/javascript-operators/</link>
      <pubDate>Thu, 28 May 2020 10:09:23 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/tools/javascript-operators/</guid>
      <description>Operator Meaning     = sets the left hand variable equal to the right hand expression   == tests whether the two sides of the the expression are equal   === tests whether they are both the same value and the same type (generally we won&amp;rsquo;t worry about this)   != tests whether the two sides are not equal   &amp;gt;,&amp;lt;,&amp;gt;=,&amp;lt;= exactly what you expect   += adds the right-hand expression to the left-hand variable    Asa bonus here are a couple of string tricks:</description>
    </item>
    
    <item>
      <title>JS DOM Modification Cheatsheet</title>
      <link>http://digitalhistory.github.io/tools/js-cheat-sheet/</link>
      <pubDate>Thu, 28 May 2020 10:05:32 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/tools/js-cheat-sheet/</guid>
      <description>Jquery and Vanilla JS equivalents:
   Task jQuery &amp;ldquo;Vanilla&amp;rdquo; JS     Get all matching elements $(&#39;selector&#39;) document.querySelectorAll(&#39;selector&#39;)   Get first matching element $(&#39;selector&#39;).first() document.querySelector(&#39;selector&#39;)   Change CSS prop $(&#39;selector&#39;).css(&#39;property-name&#39;, &#39;value&#39;) document.querySelector(&#39;selector&#39;).style.property-name = &#39;value&#39;     const matches = document.querySelectorAll(&#39;selector&#39;)     for (const m of matches) {m.style.property-name=&#39;value&#39;;}   Change Text Value $(&#39;selector&#39;).text(&#39;new text here&#39;); document.querySelector(&#39;selector&#39;).textContent = &#39;new text here&#39;;     const matches = document.</description>
    </item>
    
    <item>
      <title>Assignment 03: DOM and Data</title>
      <link>http://digitalhistory.github.io/assignment/03-dom-data/</link>
      <pubDate>Tue, 26 May 2020 10:09:00 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/assignment/03-dom-data/</guid>
      <description>Due Date: May 29
In this assignment, you will slowly work your way up to manipulation of real web pages via Javascript. This can be a difficult transition, so be prepared for some teeth-gnashing.
Due at end of the day on the due date, you can find the asssignment link on Github, and please be sure to create your own copy and clone the resultant repository to your laptop. (Don&amp;rsquo;t search out and fork the parent repository!</description>
    </item>
    
    <item>
      <title>Assignment 02: Javascript Basics</title>
      <link>http://digitalhistory.github.io/assignment/02-js-basics/</link>
      <pubDate>Sun, 17 May 2020 14:05:19 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/assignment/02-js-basics/</guid>
      <description>Due Date: May 23
This assignment introduces you to the third and most interesting pillar of basic web development: Javascript.
Due at end of the day on the due date, you can find the asssignment on Github and clone the resultant repository to your laptop.
Rubric   Passes General Tests
  Passes Reflection Tests
     </description>
    </item>
    
    <item>
      <title>Syllabus</title>
      <link>http://digitalhistory.github.io/syllabus/his393syllabus/</link>
      <pubDate>Wed, 13 May 2020 15:23:01 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/syllabus/his393syllabus/</guid>
      <description>Logistics    Instructor: Matt Price     Email: matt.price@utoronto.ca   Meeting Times T Th 10-12 EDT via BB Collaborate   Web: http://digitalhistory.github.io/   Slack: https://digitalhistoryuoft.slack.com/   Youtube: https://www.youtube.com/channel/UC59evpoPsmdKhmB9YeqXMPg   Office Hrs: T Th 3-3:30, SS 3077    In general, online communication should take place via Slack. In the case of questions having to do with official University business (requests for extensions, discussion of accommodations, any message involving sensitive personal data) please use my University email, being sure to put &amp;ldquo;HIS393&amp;rdquo; in the subject line.</description>
    </item>
    
    <item>
      <title>Assignment 01: Zero to Blog Post</title>
      <link>http://digitalhistory.github.io/assignment/01-html-css/</link>
      <pubDate>Fri, 08 May 2020 23:43:39 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/assignment/01-html-css/</guid>
      <description>Due Date: May 15
General Description You do not have to become a coder to do well in this course. However, you will have to be willing to explore technical skills that you might not otherwise develop as a humanities scholar. In this second assignment, we&amp;rsquo;ll use one of the web&amp;rsquo;s many excellent self-education platforms to learn the very basics of how web pages work. We&amp;rsquo;ll then extend that knowledge with a set of slightly more advanced programming exercises.</description>
    </item>
    
    <item>
      <title>Quick JSON tips</title>
      <link>http://digitalhistory.github.io/tools/json-tips/</link>
      <pubDate>Thu, 07 May 2020 09:24:16 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/tools/json-tips/</guid>
      <description>Just a few words about JSON format. The format of the assignments JSON file will make more sense after we&amp;rsquo;ve learned a little bit of JavaScript (in the next 3 weeks). For this assignment I&amp;rsquo;m not really asking you to understand the format, but you do have to obey the syntax rules or the assignment tests will fail. JSON is a portable data format used for moving data from one source to another.</description>
    </item>
    
    <item>
      <title>Setup</title>
      <link>http://digitalhistory.github.io/tools/setup/</link>
      <pubDate>Tue, 05 May 2020 01:43:41 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/tools/setup/</guid>
      <description>For the duration of this course, you will need to set up a &amp;ldquo;development environment&amp;rdquo; to do your work. You&amp;rsquo;ll need to download, install, and interact with a group of programs and services that make it possible to do your work. Setting your environment up can be difficult, so be sure to budget some time to do so! Also be aware that these tools will take up significant spae on your laptop and may cause your laptop to slow down somewhat if run simultaneously with</description>
    </item>
    
    <item>
      <title>Assignment 00: Your Class Profile</title>
      <link>http://digitalhistory.github.io/assignment/00-git/</link>
      <pubDate>Tue, 05 May 2020 01:37:09 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/assignment/00-git/</guid>
      <description>General Description If you&amp;rsquo;re looking for History, Please, follow that link! Your job in this assignment is to tell the class a few things about yourself. In the process we&amp;rsquo;ll think about a few issues related to digital storage of information, including privacy, interpretation of sources, and data vs. knowledge.
One of the hardest parts of this course for many people is setting up their working environment. In this assignment you will be need to set up your working environment and then use Git, much as we did in class, but this time manipulating the command line.</description>
    </item>
    
    <item>
      <title>Using VSCode</title>
      <link>http://digitalhistory.github.io/tools/using-vscode/</link>
      <pubDate>Mon, 04 May 2020 18:25:10 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/tools/using-vscode/</guid>
      <description>Microsoft&amp;rsquo;s Visual Studio Code is an amazing general-purpose code editor. Most people I collaborate with use it as their primary editor, and that will be true in most professional settings you enter. This is the first year we&amp;rsquo;re using it in the class, and I have some high hopes for it.
As with any powerful tool, it can take a little while to get comfortable with VSCode. The documentation is excellent, but may sometimes assume more advanced programming skills than you have.</description>
    </item>
    
    <item>
      <title>Understanding Popcorn</title>
      <link>http://digitalhistory.github.io/tools/understanding-popcorn/</link>
      <pubDate>Thu, 21 Nov 2019 15:16:50 -0500</pubDate>
      
      <guid>http://digitalhistory.github.io/tools/understanding-popcorn/</guid>
      <description>You may find it useful, as you prepare for the next assignment, to read the following post!
What is Popcorn Popcorn is a Javascript &amp;ldquo;library&amp;rdquo; – a small collection of programs – that lets web designers key events in a web page to a time-code in a media file. So essentially, popcorn lets you &amp;ldquo;cue up&amp;rdquo; content ad display it only during fixed periods, while a media element is playing. If you then pause or manually rewind/fast-forward the media element (audio or video), the events will also reset to the appropriate time.</description>
    </item>
    
    <item>
      <title>Javascript: Resources and Tools</title>
      <link>http://digitalhistory.github.io/tools/js-resources-tools/</link>
      <pubDate>Wed, 25 Sep 2019 22:32:09 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/tools/js-resources-tools/</guid>
      <description>Resources There are many, many excellent JavScript resources on the web. I strongly recommend the MDN JavaScript Learning Pathway. I also have a very high opinion of Eloquent Javascript, but in past years students have often found it somewhat difficult. However, it rewards careful study, teaches excellent habits, and encourages creative thinking while coding. Both MDN and EJ have built-in JS Consoles forexperimenting with code (see below).
MDN also has a more advanced guide to JavaScript which starts with this &amp;ldquo;reintroduction&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Participation</title>
      <link>http://digitalhistory.github.io/assignment/participation/</link>
      <pubDate>Tue, 10 Sep 2019 13:10:42 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/assignment/participation/</guid>
      <description>As described in the syllabus, I use your participation mark to determine the &amp;ldquo;-/null/+&amp;rdquo; part of your grade. Let me explain a little more explicitly how this works.
The System It&amp;rsquo;s simple. Suppose you successfully complete all the main assignments, but decide not to write a Project Proposal. Congratulations! You have qualified for a B. But what kind of a B?
   If your class participation was: You get a: Which ROSI will show as:     Poor B- 72   Satisfactory B 75   Excellent B+ 78    Similarly, perhaps you were only able to complete the Git &amp;amp; Github, HTML &amp;amp; CSS, Javascript and Oral History.</description>
    </item>
    
    <item>
      <title>Navigating at the Command Line</title>
      <link>http://digitalhistory.github.io/tools/navigating-command-line/</link>
      <pubDate>Tue, 10 Sep 2019 12:22:30 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/tools/navigating-command-line/</guid>
      <description>The Programming Historian link below is excellent. Having some trouble with screenshots ATM, will fix soon as I can reload my desktop – but for next few hours pls refer to the PH link for images!
One common issue for people new to the command line is that it can be tough to understand the notion of location in the filesystem. Most ordinary users interact with their filesystems through the so-called GUI layer – the graphical interface of windows.</description>
    </item>
    
    <item>
      <title>Installing Node Dependencies</title>
      <link>http://digitalhistory.github.io/tools/node-dependencies/</link>
      <pubDate>Tue, 10 Sep 2019 12:03:57 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/tools/node-dependencies/</guid>
      <description>Node.js is an exquisite piece of programming infrastructure. One of its main features is support for developer-defined dependencies. As a programmer – or in my case, as a teacher – you can inform the underlying node package manager (npm) that your project &amp;ldquo;depends&amp;rdquo; on some group of other projects. This allows programmers to build constantly on each other&amp;rsquo;s work.
In our assignments, node dependencies are mostly used to enable the tests, whose main function is to help you figure out whether you&amp;rsquo;ve done the assignments correctly.</description>
    </item>
    
    <item>
      <title>header</title>
      <link>http://digitalhistory.github.io/_header/</link>
      <pubDate>Thu, 14 Dec 2017 18:36:24 +0200</pubDate>
      
      <guid>http://digitalhistory.github.io/_header/</guid>
      <description>HIS 393 Digital History</description>
    </item>
    
    <item>
      <title>01-01: Introduction to Digital History</title>
      <link>http://digitalhistory.github.io/slides/01-01-intro-digital-history/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://digitalhistory.github.io/slides/01-01-intro-digital-history/</guid>
      <description>01-01: Introduction to Digital History .underline { text-decoration: underline; }   /* Position computations of klipse get confused by reveal.js&#39;s scaling. Hence, scaling should be disabled with this code. Fix height of code area with scrollbar (use overflow instead of overflow-y to restore CodeMirror setting afterwards): */ .reveal section pre { max-height: 70vh; height: auto; overflow: auto; } /* Reset some reveal.js and oer-reveal settings: */ .reveal section pre .</description>
    </item>
    
    <item>
      <title>01-02: Git and Github</title>
      <link>http://digitalhistory.github.io/slides/01-02-git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://digitalhistory.github.io/slides/01-02-git/</guid>
      <description>01-02: Git and Github .underline { text-decoration: underline; }   /* Position computations of klipse get confused by reveal.js&#39;s scaling. Hence, scaling should be disabled with this code. Fix height of code area with scrollbar (use overflow instead of overflow-y to restore CodeMirror setting afterwards): */ .reveal section pre { max-height: 70vh; height: auto; overflow: auto; } /* Reset some reveal.js and oer-reveal settings: */ .reveal section pre .</description>
    </item>
    
    <item>
      <title>02-01: Git Concepts</title>
      <link>http://digitalhistory.github.io/slides/02-02-more-git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://digitalhistory.github.io/slides/02-02-more-git/</guid>
      <description>02-01: Git Concepts .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( &#39;link&#39; ); link.rel = &#39;stylesheet&#39;; link.type = &#39;text/css&#39;; link.href = &#39;../../vendor/reveal//css/print/pdf.css&#39;; document.getElementsByTagName( &#39;head&#39; )[0].appendChild( link ); }    02-01: Git Concepts Matt Price  (view this presentation in another theme: Black (default) - White - League - Sky - Beige - Simple Serif - Blood - Night - Moon - Solarized )	--   In this section  collaboration remotes branches commits worktree vs.</description>
    </item>
    
    <item>
      <title>03-01: What the Web Signifies</title>
      <link>http://digitalhistory.github.io/slides/04-01-web-signifies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://digitalhistory.github.io/slides/04-01-web-signifies/</guid>
      <description>03-01: What the Web Signifies .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( &#39;link&#39; ); link.rel = &#39;stylesheet&#39;; link.type = &#39;text/css&#39;; link.href = &#39;../../vendor/reveal//css/print/pdf.css&#39;; document.getElementsByTagName( &#39;head&#39; )[0].appendChild( link ); }    03-01: What the Web Signifies Matt Price  (view this presentation in another theme: Black (default) - White - League - Sky - Beige - Simple Serif - Blood - Night - Moon - Solarized )	--   Today  Concept of the &#34;</description>
    </item>
    
    <item>
      <title>03-02: HTML: Machine-readable Text</title>
      <link>http://digitalhistory.github.io/slides/03-01-html-backlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://digitalhistory.github.io/slides/03-01-html-backlog/</guid>
      <description>03-02: HTML: Machine-readable Text .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( &#39;link&#39; ); link.rel = &#39;stylesheet&#39;; link.type = &#39;text/css&#39;; link.href = &#39;../../vendor/reveal//css/print/pdf.css&#39;; document.getElementsByTagName( &#39;head&#39; )[0].appendChild( link ); }    03-02: HTML: Machine-readable Text Matt Price  (view this presentation in another theme: Black (default) - White - League - Sky - Beige - Simple Serif - Blood - Night - Moon - Solarized )	--   HTML  Hyper text Markup Language structures web pages &amp;amp; their ocntent     Tag Structure &amp;lt;tag att1=&#34;</description>
    </item>
    
    <item>
      <title>03-03 And Now: CSS!</title>
      <link>http://digitalhistory.github.io/slides/03-03-css/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://digitalhistory.github.io/slides/03-03-css/</guid>
      <description>03-03 And Now: CSS! .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( &#39;link&#39; ); link.rel = &#39;stylesheet&#39;; link.type = &#39;text/css&#39;; link.href = &#39;../../vendor/reveal//css/print/pdf.css&#39;; document.getElementsByTagName( &#39;head&#39; )[0].appendChild( link ); }    03-03 And Now: CSS! Matt Price  (view this presentation in another theme: Black (default) - White - League - Sky - Beige - Simple Serif - Blood - Night - Moon - Solarized )	--   Reminder  HTML for structure/content; CSS for presentation Resources: Codeacademy CSS offerings; Learn Layout; Mozilla Developer Network; many other cool sites     What you Need to Learn Today  syntax: selectors, rules, punctuation; jargon: colors, sizes where to look stuff up (!</description>
    </item>
    
    <item>
      <title>03-04, CSS Part 2: Layout</title>
      <link>http://digitalhistory.github.io/slides/03-04-css-layout/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://digitalhistory.github.io/slides/03-04-css-layout/</guid>
      <description>03-04, CSS Part 2: Layout .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( &#39;link&#39; ); link.rel = &#39;stylesheet&#39;; link.type = &#39;text/css&#39;; link.href = &#39;../../vendor/reveal//css/print/pdf.css&#39;; document.getElementsByTagName( &#39;head&#39; )[0].appendChild( link ); }    03-04, CSS Part 2: Layout Matt Price  (view this presentation in another theme: Black (default) - White - League - Sky - Beige - Simple Serif - Blood - Night - Moon - Solarized )	--   Recap  selector syntax: selector &amp;gt; string {property: value;} colors: #RRGGBB or rgba(RRR, BBB, GGG, 0.</description>
    </item>
    
    <item>
      <title>04-01: Getting Started With Javascript</title>
      <link>http://digitalhistory.github.io/slides/04-01-js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://digitalhistory.github.io/slides/04-01-js/</guid>
      <description>04-01: Getting Started With Javascript .underline { text-decoration: underline; }   /* Position computations of klipse get confused by reveal.js&#39;s scaling. Hence, scaling should be disabled with this code. Fix height of code area with scrollbar (use overflow instead of overflow-y to restore CodeMirror setting afterwards): */ .reveal section pre { max-height: 75vh; height: auto; overflow: auto; } /* Reset some reveal.js and oer-reveal settings: */ .reveal section pre .</description>
    </item>
    
    <item>
      <title>05-01: Doing Stuff: functions</title>
      <link>http://digitalhistory.github.io/slides/05-01-js-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://digitalhistory.github.io/slides/05-01-js-functions/</guid>
      <description>05-01: Doing Stuff: functions .underline { text-decoration: underline; }   /* Position computations of klipse get confused by reveal.js&#39;s scaling. Hence, scaling should be disabled with this code. Fix height of code area with scrollbar (use overflow instead of overflow-y to restore CodeMirror setting afterwards): */ .reveal section pre { max-height: 75vh; height: auto; overflow: auto; } /* Reset some reveal.js and oer-reveal settings: */ .reveal section pre .</description>
    </item>
    
    <item>
      <title>05-02: Javascript Objects and Properties</title>
      <link>http://digitalhistory.github.io/slides/05-02-js-objects-props/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://digitalhistory.github.io/slides/05-02-js-objects-props/</guid>
      <description>05-02: Javascript Objects and Properties .underline { text-decoration: underline; }   /* Position computations of klipse get confused by reveal.js&#39;s scaling. Hence, scaling should be disabled with this code. Fix height of code area with scrollbar (use overflow instead of overflow-y to restore CodeMirror setting afterwards): */ .reveal section pre { max-height: 75vh; height: auto; overflow: auto; } /* Reset some reveal.js and oer-reveal settings: */ .reveal section pre .</description>
    </item>
    
    <item>
      <title>12: Citizen History</title>
      <link>http://digitalhistory.github.io/slides/12-citizen-history/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://digitalhistory.github.io/slides/12-citizen-history/</guid>
      <description>12: Citizen History .underline { text-decoration: underline; }   /* Position computations of klipse get confused by reveal.js&#39;s scaling. Hence, scaling should be disabled with this code. Fix height of code area with scrollbar (use overflow instead of overflow-y to restore CodeMirror setting afterwards): */ .reveal section pre { max-height: 70vh; height: auto; overflow: auto; } /* Reset some reveal.js and oer-reveal settings: */ .reveal section pre .CodeMirror pre { font-size: 2.</description>
    </item>
    
    <item>
      <title>Abundance (Prelude to Distant Reading)</title>
      <link>http://digitalhistory.github.io/slides/04-02-abundance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://digitalhistory.github.io/slides/04-02-abundance/</guid>
      <description>Abundance (Prelude to Distant Reading) .underline { text-decoration: underline; }   /* Position computations of klipse get confused by reveal.js&#39;s scaling. Hence, scaling should be disabled with this code. Fix height of code area with scrollbar (use overflow instead of overflow-y to restore CodeMirror setting afterwards): */ .reveal section pre { max-height: 70vh; height: auto; overflow: auto; } /* Reset some reveal.js and oer-reveal settings: */ .reveal section pre .</description>
    </item>
    
    <item>
      <title>Distant Reading</title>
      <link>http://digitalhistory.github.io/slides/04-02-distant-reading/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://digitalhistory.github.io/slides/04-02-distant-reading/</guid>
      <description>Distant Reading .underline { text-decoration: underline; }   /* Position computations of klipse get confused by reveal.js&#39;s scaling. Hence, scaling should be disabled with this code. Fix height of code area with scrollbar (use overflow instead of overflow-y to restore CodeMirror setting afterwards): */ .reveal section pre { max-height: 70vh; height: auto; overflow: auto; } /* Reset some reveal.js and oer-reveal settings: */ .reveal section pre .CodeMirror pre { font-size: 2em; box-shadow: none; width: auto; padding: 0.</description>
    </item>
    
    <item>
      <title>Popcorn/Oral History</title>
      <link>http://digitalhistory.github.io/slides/10-02-popcorn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://digitalhistory.github.io/slides/10-02-popcorn/</guid>
      <description>Popcorn/Oral History .underline { text-decoration: underline; }   /* Position computations of klipse get confused by reveal.js&#39;s scaling. Hence, scaling should be disabled with this code. Fix height of code area with scrollbar (use overflow instead of overflow-y to restore CodeMirror setting afterwards): */ .reveal section pre { max-height: 70vh; height: auto; overflow: auto; } /* Reset some reveal.js and oer-reveal settings: */ .reveal section pre .CodeMirror pre { font-size: 2.</description>
    </item>
    
  </channel>
</rss>