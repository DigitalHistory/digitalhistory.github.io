[
{
	"uri": "https://digitalhistory.github.io/dh-website/syllabus/",
	"title": "Course Docs",
	"tags": [],
	"description": "",
	"content": " Syllabus  "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " Digital History This is the website for His 393, Digital History, at the University of Toronto. All of the course materials are described in detail in the links on the sidebar; you probably want to start with the syllabus. Tables of contents for long pages can be access via the odd list icon at the top left of the page menu.\nEnjoy the class!\n"
},
{
	"uri": "https://digitalhistory.github.io/dh-website/assignment/06-project-proposal/",
	"title": "Assignment 06: Project Proposal",
	"tags": [],
	"description": "",
	"content": " Due Date: April 02\nRemember that the proper way to create your assignment repository is by clicking on this lick, allowing Github Classroom to do the work for you. (But you should already have done this for the last two assignments!)\nAs before, please make sure you\u0026rsquo;ve pulled from the upstream repository before starting work on this assignment. See your own repo or the upstream Github Repo for details.\nRubric Passes General Tests  -\n-\n"
},
{
	"uri": "https://digitalhistory.github.io/dh-website/assignment/",
	"title": "Assignments",
	"tags": [],
	"description": "",
	"content": " Assignment 06: Project Proposal Assignment 05: Oral History Assignment 04: Spatial History Assignment 03: DOM and Data Assignment 02: Javascript Basics Assignment 01: Zero to Blog Post Assignment 00: Your Class Profile Participation  "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/assignment/05-oral-history/",
	"title": "Assignment 05: Oral History",
	"tags": [],
	"description": "",
	"content": " Due Date: March 30\nThere is no new assignment link for the Oral History assignment; instead, you will just use the repository you have already cloned, or follow this old link to clone for the first time.\nHowever, you will need to update some of the files in your repository to newer versions that I have since pushed to the main assignment repository. If you followed my instructions, you will not have made any changed to these files, so it should be trivial to pull in my changes by pasting these commands into the terminal (be sure you are in the root directory of your repository when issuing these commands):\ngit remote add upstream https://github.com/DigitalHistory/advanced-topics.git git pull upstream master  This may pop you into a new editor window to edit the commit message. If so, just save it as as is and close; commit should proceed from there. If you have issues, please post them to Slack.\nSome more advanced Git command tutorials coming your way soon.\nSee the README.org file in your own repo or the upstream Github Repo for details.\nRubric Passes General Tests  -\n-\n"
},
{
	"uri": "https://digitalhistory.github.io/dh-website/assignment/04-spatial-history/",
	"title": "Assignment 04: Spatial History",
	"tags": ["assignment"],
	"description": "",
	"content": " Due Date: March 18\nYour next assignment builds directly from our in-class exercise, and should be quite a bit easier to manage, technically, than your last assignment. Essentially, you will repeat the in-class assignment with much greater intellectual effort, but using the same technical framework. The assignment is now online, and I have extended the due date to Monday, March 18.\nRubric Passes General Tests  -\n-\n"
},
{
	"uri": "https://digitalhistory.github.io/dh-website/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://digitalhistory.github.io/dh-website/tags/assignment/",
	"title": "assignment",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://digitalhistory.github.io/dh-website/assignment/03-dom-data/",
	"title": "Assignment 03: DOM and Data",
	"tags": ["assignment"],
	"description": "",
	"content": " Due Date: March 01\nIn this assignment, you will slowly work your way up to manipulation of real web pages via Javascript. This can be a difficult transition, so be prepared for some teeth-gnashing.\nDue at end of the day on the due date, you can find the asssignment on Github, and please be sure to check out your own copy (as per the instructions) by following this link, and cloning the resultant repository to your laptop.\nRubric Passes General Tests [ ] Passes Reflection Tests Comments:\n  "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/assignment/02-js-basics/",
	"title": "Assignment 02: Javascript Basics",
	"tags": ["assignment"],
	"description": "",
	"content": " Due Date: Feb 12\nThis assignment introduces you to the third and most interesting pillar of basic web development: Javascript.\nDue at end of the day on the due date, you can find the asssignment on Github but please be sure to check out your own copy (as per the instructions) by following this link, and cloning the resultant repository to your laptop.\nRubric Passes General Tests [ ] Passes Reflection Tests Comments:\n  "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/assignment/01-html-css/",
	"title": "Assignment 01: Zero to Blog Post",
	"tags": [],
	"description": "",
	"content": " Due Date: Jan. 31 (2 days later than original deadline)\nGeneral Description You do not have to become a coder to do well in this course. However, you will have to be willing to explore technical skills that you might not otherwise develop as a humanities scholar. In this second assignment, we\u0026rsquo;ll use one of the web\u0026rsquo;s many excellent self-education platforms to learn the very basics of how web pages work. We\u0026rsquo;ll then extend that knowledge with a set of slightly more advanced programming exercises.\nWeb pages are composed of three components: HTML, CSS, and Javascript. HTML provides the structure and content of a web page; CSS controls the style of presentation; and Javascript permits dynamic modification of both. To explore the web from the inside, you need to be a little bit comfortable in all three.\nIn this assignment you will be introduced to HTML and CSS. The detailed assignment README leads you through a series of skill-building exercises, and provides links to comprehensive tutorial resources. As always, ask for help on Slack; use the new #blog-assignment channel for support/collaboration.\nhere is the assignment rep-creation link!!\n"
},
{
	"uri": "https://digitalhistory.github.io/dh-website/assignment/00-git/",
	"title": "Assignment 00: Your Class Profile",
	"tags": ["assignment"],
	"description": "",
	"content": " General Description If you\u0026rsquo;re looking for History, Please, follow that link! Your job in this assignment is to tell the class a few things about yourself. In the process we\u0026rsquo;ll think about a few issues related to digital storage of information, including privacy, interpretation of sources, and data vs. knowledge.\nOne of the hardest parts of this course for many people is setting up their working environment. In this assignment you will be need to set up your working environment and then use Git, much as we did in class, but this time manipulating the command line.\nThis may take longer than you think, and it\u0026rsquo;s due soon. Please get started soon by:\n clicking on this link to get your account set up following the instructions on the Assignment 0 site.  "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/syllabus/his393syllabus/",
	"title": "Syllabus",
	"tags": [],
	"description": "",
	"content": " Logistics    Instructor: Matt Price     Email: matt.price@utoronto.ca   Meeting Times T Th 2-3, SS 1070   Web: http://digital.hackinghistory.ca/   Slack: https://digitalhistoryuoft.slack.com/   Office Hrs: T Th 3-3:30, SS 3077    In general, online communication should take place via Slack. In the case of questions having to do with official University business (requests for extensions, discussion of accommodations, any message involving sensitive personal data) please use my University email, being sure to put \u0026ldquo;HIS393\u0026rdquo; in the subject line.\nIntroduction We all know \u0026#x2013; it is so commonplace that we barely even notice it! \u0026#x2013; that we are living through a revolutionary period in the history of communication. In the year of your birth, the World Wide Web was a scrawny, hand-powered frontier of hand-coded sites and Internet startups. Amazon and Google were infants. The University of Toronto Library website looked something like this:\n and many students and faculty still used the card catalog to find books in Robarts.\nToday, the processes of research, writing and reading are all dramatically transformed by information technology. Instead of painstakingly discovering rare books and manuscript artifacts, we can do full-text searches on a vast corpus. Our writing is mediated by immensely powerful computing machines, and our creations need not be limited exclusively to the linear texts around which all the humanities initially took shape. Readers encounter our writing, not as a few precious drops of information in a desert of ignorance, but as part of an endless stream of information that assaults them all day long.\nHow should history respond to these new conditions of our existence? In this class we explore foundational topics in the \u0026ldquo;digital humanities\u0026rdquo; and ask what we can learn from them about how we should be doing history \u0026#x2013; in particular, how we should be collecting, analyzing, synthesizing and presenting knowledge.\n How do the digital media developed in the last two decades change the way we understand history? Can the fundamental goal of interpreting the past survive? What, if any, new technical skills do we need to acquire? Can we use the new media to ask (and answer!) new kinds of questions? Can they help us improve our answers to the old questions? Perhaps most powerfully: how do the new digital conditions of existence relate to the question of \u0026ldquo;engaged\u0026rdquo; scholarship? What new opportunities, constraints, and dangers does digital production call forth when we mix scholarship and citizenship?  Objectives At the end of this course, you should:\n be able to describe to others what the phrase \u0026ldquo;digital humanities\u0026rdquo; means to you. be able to frame a coherent and nuanced argument of your own about the value of DH methods to the field of history be able to clearly state and defend a position regarding \u0026ldquo;engaged scholarship\u0026rdquo;, and articulate the relationship of your argument to the contemporary media landscape have a basic understanding of markup languages and their use in DH be able to make compelling use of media materials such as audio, video, and animation in historical arguments understand how to create simple historical maps, and have an opinion about the value of GIS in historical argument  Method There are many approaches to the digital humanities, all of them involving tools that are under rapid and iterative development. A given project is likely to require a substantial training period in the particular tools chosen by the principal investigators. It is therefore not possible for this course to provide an effective survey of \u0026ldquo;the\u0026rdquo; digital humanities toolkit. But learning tools is an essential skill for the digital humanist. So what should we do?\nAlmost every digital humanist will, at some point, need to do the following:\n read and edit HTML, CSS and Javascript debug running web pages using the browser\u0026rsquo;s built-in tools use a text editor to write code in any of several languages collaborate with peers using version control software, almost always git  Our emphasis is therefore on simple coding taught using standard tools that are available almost everywhere. Almost all of the software we use is Free or Open Source. You will learn very basic web development skills and slowly come to apply them to increasingly sophisticated (but still pretty simple!) historical questions. These baby steps will give you some sense of what skills a \u0026ldquo;real\u0026rdquo; digital history project requires, and give you the tools you\u0026rsquo;ll need to teach yourself when you encounter new tools in the course of a project.\nPolicies Accessibility The University provides academic accommodations for students with disabilities in accordance with the terms of the Ontario Human Rights Code. For information on services and resources, see http://www.studentlife.utoronto.ca/as\nRespecting Diversity Diverse backgrounds, embodiments, and experiences are essential to the critical thinking endeavor at the heart of higher education. We expect you to be respectful of the many social and cultural differences among us, which may include, but are not limited to: age, cultural background, disability, ethnicity, technical ability, gender identity and presentation, citizenship and immigration status, national origin, race, religious and political beliefs, sex, sexual orientation, and socioeconomic status. Please talk with me right away if you experience disrespect in this class—from any source, including myself—and I will active work to address it.\nCorrespondence As noted above, most communication should take place via Slack. In the case of questions having to do with official University business (requests for extensions, discussion of accommodations, any message involving sensitive personal data) please use my University email, being sure to put \u0026ldquo;HIS393\u0026rdquo; in the subject line. I\u0026rsquo;ll do my best to reply within two working days, though occasionally the delay may be slightly longer. Please allow the full 48 hours to elapse before sending a repeat email.\nAlso: I have an injury-related difficulty co-ordinating action between my left and right hands, which leads to very frequent \u0026amp; distinctive typographical errors (and is also one of the many reasons you don\u0026rsquo;t want to hear me play a musical instrument). In my course materials, assignment comments, and announcements, I strive to eliminate those errors, but in instant messaging I am less attentive, as typing corrections approximately triples my composition time. So\u0026#x2026; please bear with me.\nAttendance Make every effort to attend each class meeting (including lab sections)! Class will begin and (usually) end on time. Please do your best to get to class before the start of the session. Students are expected to attend all meetings, with exceptions permitted in case of illness and family emergencies.\nPlease silence all cell phones/pagers/etc. before the beginning of each class. You should bring your laptop for in-class work, but please don\u0026rsquo;t use class time (lecture or lab) to check your email, update your Facebook, read reddit, watch YouTube, make dank memes, seize the means of production (allowed), etc. Such usage is distracting and interferes with learning both for you and for all the other students around you. Spend class time on class materials. If another student\u0026rsquo;s activity is distracting, please ask them to stop it (or let me know outside of class).\nTools Course assignments will require you to install software. All of the software we use is free, but it requires a laptop to run. A Chromebook unfortunately will not be sufficient. While it is in principle possible to do all of your assignments on the web or using a very basic text editor, I do not recommend that method, and will not offer technical support. If you don\u0026rsquo;t own a laptop, you should find a way to borrow one, or buy a cheap model on College St to use for the duration of the semester.\nI can offer help with the following\n   Tool On Mac On Windows On Linux     Real Web Browser Firefox and/or Chrome Firefox and/or Chrome Firefox and/or Chrome   Text Editor VSCode VSCode VSCode   Bash Shell Environment Terminal (Built in) Git for Windows or Windows Subsystem for Linux gnome-terminal, qterm, etc   Git Version Control Git for OSX Git for Windows apt-get install git   Git Visualization (optional!) gitKraken gitKraken gitKraken   Github Org Membership Sign up here Sign up here Sign up here   Node and NPM Node Website (guide) Node Website (guide) Node Website (distro instructions)    Please see the Setup page for more details about the particular tools we will be using. YOU WILL ABSOLUTEY NEED TO HAVE THESE TOOLS IN ORDER TO TAKE THE COURSE\nCourse Requirements \u0026amp; Grading The assignments in this course take a wide variety of forms, and for the most part, differ significantly from what you\u0026rsquo;re likely to have encountered in other History courses. If you have little technical experience, or have perhaps ended up in this course by accident (!), you may find some of the work daunting at first. I have done my very best to make the assignments feasible for beginners, but you will likely encounter some difficult moments. I therefore strongly urge you to (1) start early! and (2) persevere through the difficult initial stages. The frustration you experience is, in fact, part of pedagogical method here. You are not expected to become a coding ninja, but learning how to learn is a major component of work in the Digital Humanities.\nBe warned! Marking in this course is unusual!\nGrading in this course is done using a modified point system. The system may seem odd at first, but it has definite advantages for both students and teachers, so don\u0026rsquo;t be intimidated. Instead of receiving a number or letter grade for each assignment, and then getting a weighted sum of those grades as your final mark, you will choose what final mark to try for and then complete the assignments required for that mark. A certain set of assignments is required for a D; for a C, you must complete all of the \u0026ldquo;D\u0026rdquo; assignments plus another set; for a B, all of the C assignments plus some more; and the same goes for an A.\nHere are some more details:\n All Assignments Are Graded Pass/Fail Each assignment you get will include a careful explanation of my expectations. If your work meets those expectations, you get full credit; if not you get no credit. A \u0026lsquo;Passing\u0026rsquo; Mark on Assignments is a B+ In order to get credit for an assignment, you will have to demonstrate a high level of mastery \u0026#x2013; about the level normally required for a B+. Each Higher Grade Represents a quantum level of additional achievement As you move up the ladder, assignments test more advanced and difficult concepts from the course. If you fail, you can try again You start the semester with 5 \u0026lsquo;retry\u0026rsquo; chits, which you can use to resubmit assignments that have not succeeded. If necessary, you can use all of those chits on a single assignment! Resubmission process must be completed withing 1 week of the return date of the original version. A late assignment costs one \u0026lsquo;retry\u0026rsquo; chit There is no percentage penalty for late work; instead, a late paper will cost you one of your retry opportunities. Second and third tries get fewer comments I will give substantial comments on first tries; additional tries will get less and less fulsome commentary. Pluses and Minuses are determined by participation The only part of your grade which is not determined on a pass/fail basis is the \u0026ldquo;+\u0026rdquo; or \u0026ldquo;-\u0026rdquo; part, which is assigned based on your on and offline participation. See the participation grade sheet for more details.  I know there will be questions! Please don\u0026rsquo;t hesitate to ask them. And here, finally, is the list of assignments. Detailed assignments will be handed out with adequate time to permit completion.\n   Assignment Due Date Skills/Aims A B C D     Class Profile Jan. 17 version control and collaboration \u0026#10004; \u0026#10004; \u0026#10004; \u0026#10004;   G \u0026amp; GH Extras   \u0026#10004;      Zero to Blog Post Jan. 29 web markup and presentation \u0026#10004; \u0026#10004; \u0026#10004; \u0026#10004;   Z2B Extras   \u0026#10004;      A Table of Ministers Feb. 12 Programming Concepts: abstraction, loops, DOM \u0026#10004; \u0026#10004; \u0026#10004; \u0026#10004;   Ministers Extras   \u0026#10004;      Using Data Sources Mar. 01 Programming Concepts: Object structure, substitution, text as data \u0026#10004; \u0026#10004; \u0026#10004;    Data Sources Extras   \u0026#10004;      Spatial History Mar. 15 API\u0026rsquo;s, GIS \u0026#10004; \u0026#10004;     Oral History Mar. 30 API\u0026rsquo;s, Multimedia Narratives \u0026#10004; \u0026#10004; \u0026#10004; \u0026#10004;   Project Proposal Apr. 05 Imagine a Digital History Project \u0026#10004;                Texts While all our readings are online, the following texts are heavily used \u0026amp; may be of interest. They are available in the library or via various online booksellers:\n Moretti, Franco. Graphs, Maps, Trees: Abstract Models for a Literary History Verso, 2005. (Online Access) Geddes et al Toward Spatial Humanities Bloomington: Indiana University Press, 2014. Perks, et al. The Oral History Reader. 2016 (Online Access)  Course Outline Text, Code, and the Web Introducing Digital History (Jan. 08) Class Synopsis: Introduction to the course\nReadings: You may want to read some of these as general preparation for this and other history classes:\n W. Caleb McDaniel. “How to Read for History.” W. Caleb McDaniel. Accessed June 27, 2015. http://wcm1.web.rice.edu/howtoread.html. William Cronon, \u0026ldquo;Why the Past Matters\u0026rdquo; Cohen, Daniel J, and Roy Rosenzweig. “Becoming Digital.” In Digital History: A Guide to Gathering, Preserving, and Presenting the Past on the Web. Philadelphia: University of Pennsylvania Press, 2006. http://chnm.gmu.edu/digitalhistory/digitizing/.  In-Class Activity: Collaboration on Github, Markdown (Jan. 10) What the Web Signifies (Jan. 15) We all live with the web, but that doesn\u0026rsquo;t mean we think much about how it works and what it\u0026rsquo;s changed. This week\u0026rsquo;s lecture presents some thoughts on the changing nature of the public sphere and the significance of the web\u0026rsquo;s digital and machine-readable nature.\nReadings:\n Juergen Habermas, \u0026ldquo;The Public Sphere: An Encyclopedia Article\u0026rdquo; (1964) Cohen, Daniel J. “Interchange: The Promise of Digital History” 95, no. 2 (September 1, 2008): 452–91. http://jah.oxfordjournals.org.myaccess.library.utoronto.ca/content/95/2/452.short  In-Class Activity: HTML + CSS (Jan. 17) Resources: These Mozilla Developer Network guides are inter-related, and the structure is easy to get lost in. Still, this is among the best resources on the web.\n MDN: HTML Basics. Start here. MDN: Getting Started with the Web (HTML Basics, above, is part of this progression. You can skip this for now, but we\u0026rsquo;ll come back to several of these topics later.) MDN: Intro to HTML. This is a great, systematic introduction to the most important HTML elements. There are some interactive exercises, and you can also copy code into files to experiment with in VSCode using the Live Server Preview functionality. MDN: Learn HTML Pathway . There\u0026rsquo;s a ton more here; we will use some of it later on. MDN Reference. Complete reference for all HTML elements, These pages are often very technical, but can be useful when you find yourself stumped    Blogstarter: simple tutorial (one of a zillion alternatives to the MDN pages)  Abundance and Openness (Jan. 22) One of the key features of the web is its immenseness. We will discuss how this genuinely new circumstance transforms the work of the historian.\n W. Caleb McDaniel. “How to Read for History.” W. Caleb McDaniel. Accessed June 27, 2015. http://wcm1.web.rice.edu/howtoread.html. Council. “Many More than a Million: Building the Digital Environment for the Age of Abundance.” Council on Library and Information Resources. Accessed June 7, 2011. http://www.clir.org/activities/digitalscholar/index.html. Turkel, William J. “Going Digital.” Accessed October 12, 2011. http://williamjturkel.net/2011/03/15/going-digital/.\n “Learn How Google Works: In Gory Detail.” PPCBlog. Accessed June 30, 2015. http://www.ppcblog.com/how-google-works/.\n  In-Class Activity: More HTML + CSS (Jan. 24) Data Driven History Distant Reading 1 (Jan. 29) Franco Moretti\u0026rsquo;s Graphs, Maps, Trees was a manifesto of sorts for a data-driven literary history. We\u0026rsquo;ll discuss the first 2/3s of this book before turning to some practical skills\nReadings:\n Moretti, Franco. Graphs, Maps, Trees: Abstract Models for a Literary History. Verso, 2005 through p. 64, or Moretti, Franco. “Graphs, Maps, Trees.” New Left Review 24 (November 1, 2003): 67–93m and Moretti, Franco. “Graphs, Maps, Trees - 2.” New Left Review 26 (March 1, 2004): 79–103 \u0026ldquo;Basic Text Mining\u0026rdquo; in The Historian\u0026rsquo;s Macroscope: http://www.themacroscope.org/?page%5Fid=362  In-Class Activity: Javascript variables \u0026amp; functions (Jan. 31) Distant Reading 2: Are Texts Data? (Feb. 05) More Moretti, and some criticisms\nReadings:\n Moretti, Franco. Graphs, Maps, Trees: Abstract Models for a Literary History. Verso, 2005, ch. 3 to end, or “Graphs, Maps, Trees - 3.” New Left Review 28 (July 1, 2004): 43–63. . Stephen Ramsay, \u0026ldquo;The Hermeneutics of Screwing Around\u0026ldquo; Gibbs, Fred. “Hermeneutics of Data and Historical Writing” Writing History in the Digital Age, March 14, 2012. http://writinghistory.trincoll.edu/data/gibbs-owens-2012-spring/. Marc Dunkelman. “What Data Can\u0026rsquo;t Convey.” Blog. The Chronicle of Higher Education, 19 2014.  In-Class Activity: Javascript objects and DOM manipulation (Feb. 07) Text as Data, History as Algorithm (Feb. 12) Note: we may need to push this up We\u0026rsquo;ll explore \u0026ldquo;topic modelling\u0026rdquo; \u0026#x2013; one of the most popular DH methods \u0026#x2013; as well as some critiques of it, and some more playful extrapolations about the future of data-driven history.\nReadings:\n Gibbs, Fred. “Hermeneutics of Data and Historical Writing.” Writing History in the Digital Age, March 14, 2012. Seth van Hooland, Ruben Verborgh, and Max De Wilde. “Cleaning Data with OpenRefine.” The Programming Historian.  In-Class Activity: Javascript questions (Feb. 14) READING WEEK \u0026#x2013; NO CLASS Feb. 19 and Feb. 21 Computing Concepts Catch-up day (Feb. 26) More JS, and Trees.\nAssignment Help Day (Feb. 28) Maps, Visualization, and History Spatial History (Mar. 05) Contemporary \u0026ldquo;Historical GIS\u0026rdquo; and web-based geohistory projects descend from an illustrious lineage of qualitative and quantitative \u0026ldquo;spatial histories\u0026rdquo;. In class today we explore what happens when \u0026ldquo;place\u0026rdquo; takes centre stage in a historical analysis.\nReadings:\n Mark Monmonier, \u0026ldquo;Lying with Maps\u0026rdquo; Statistical Science 20:3, 2005. 215-222. Ben Schmidt, \u0026ldquo;Data narratives and structural histories: Melville, Maury, and American whaling  In-Class Activity: Mapping with Google (Mar. 07) Maps Online (Mar. 12) Maps and visiaulizations are neat and all, but contemporary web-based geohistory allows historical maps to interact powerfully with other data sources. We\u0026rsquo;ll explore some possibilities!\nReadings:\n \u0026ldquo;Railways and Agriculture in France and Great Britain\u0026rdquo; in Toward Spatial Humanities \u0026ldquo;The Development, Persistance, and Change of Racial Segregation in U.S. Urban Areas, 1880-2010\u0026rdquo; in Toward Spatial Humanities google earth tutorial: https://geospatialhistorian.wordpress.com/lessons/lesson-1/  In-Class Activity: GIS (Mar. 14) Visualization (Mar. 19) Of course, maps and graphs are in a certain sense part of a much broader field of rhetorical visualizations: attempts to convey quantitative information through pictures in an effort to convince the reader.\nReadings:\n Jefferson Bailey and Lily Pregill, ‘Speak to the Eyes: The History and Practice of Information Visualization’, Art Documentation: Journal of the Art Libraries Society of North America, vol. 33 (2014). Kostiantyn Kucher and Andreas Kerren, ‘Text Visualization Browser: A Visual Survey of Text Visualization Techniques’, (2014) Andy Kirk, 298 Data Visualisation Resources, Visualising Data, (2015).  In-Class Activity: Reading visualizations (Mar. 21) Oral History, Crowdsourcing, and the Promise of the Public Sphere What\u0026rsquo;s Special about Oral History (Mar. 26) Oral History has a long tradition; we explore its roots and peculiarities, and\nReadings:\n \u0026ldquo;The Voice of the Past\u0026rdquo; and \u0026ldquo;What makes Oral History Different\u0026rdquo; in The Oral History Reader Listen to some part of \u0026ldquo;I can almost see the lights of home\u0026rdquo; http://www.albany.edu/jmmh/vol2no1/lightssoundessay.html  In-Class Activity: Popcorn.js (Mar. 28) Project Planning \u0026amp; Citizen History (Apr. 02) We\u0026rsquo;ll discuss some project management techniques that should help you with your final proposal\n http://publichistorycommons.org/where-are-the-citizen-historians/  Oral History \u0026amp; Remix Culture (Apr. 04) Once oral histories migrate to the web, they, like maps, can interact with other kinds of data.\nIf we\u0026rsquo;re ahead of schedule, we\u0026rsquo;ll watch Harlan County USA in class.\nReadings:\n \u0026ldquo;Oral History and the Digital Revolution\u0026rdquo; and \u0026ldquo;Authoring in Sound\u0026rdquo; in The Oral History Reader Gunkel, David J. “Rethinking the Digital Remix: Mash‐ups and the Metaphysics of Sound Recording.” Popular Music and Society 31, no. 4 (October 1, 2008): 489–510. http://resolver.scholarsportal.info/resolve/03007766/v31i0004/489%5Frtdrmatmosr.xml.  Acknowledgments Thanks to Joel Wrossley of the University of Washington and Thomas J Bradley of Algonquin Collegee for help and inspiration in assignments and grading strategy. The \u0026ldquo;Policies\u0026rdquo; section above is taken almost verbatim from Joel\u0026rsquo;s web development course. Various pieces of the course have been inspired by other teachers over the year, and I hope to do a better job of document theft and inspiration from here on in.\n"
},
{
	"uri": "https://digitalhistory.github.io/dh-website/_header/",
	"title": "header",
	"tags": [],
	"description": "",
	"content": "HIS 393 Digital History\n"
},
{
	"uri": "https://digitalhistory.github.io/dh-website/assignment/participation/",
	"title": "Participation",
	"tags": [],
	"description": "",
	"content": " As described in the syllabus, I use your participation mark to determine the \u0026ldquo;-/null/+\u0026rdquo; part of your grade. Let me explain a little more explicitly how this works.\nThe System It\u0026rsquo;s simple. Suppose you successfully complete the Git \u0026amp; Github, HTML \u0026amp; CSS, Javascript, Spatial History, and Oral History assignments. Congratulations! You have qualified for a B. But what kind of a B?\n   If your class participation was: You get a: Which ROSI will show as:     Poor B- 72   Satisfactory B 75   Excellent B+ 78    Similarly, perhaps you were only able to complete the Git \u0026amp; Github, HTML \u0026amp; CSS, Javascript and Oral History. Oops! You\u0026rsquo;re going to get a C. Like your somewhat happier classmate, your final grade will be assigned thus:\n   If your class participation was: You get a: Which ROSI will show as:     Poor C- 52   Satisfactory C 55   Excellent C+ 58    But Note!\nA+ is a special grade. Suppose you complete all the assignments satisfactorily, including the additional \u0026ldquo;A only\u0026rdquo; sections of the relevant assignments. Wow! You get an A, great. But\u0026hellip; do you get an A+?\n   If your class participation was: You get an: Which ROSI will show as:     Poor A- 83   Satisfactory A 88   Excellent DEPENDS DEPENDS    Even if your participation was excellent, you will only receive an A+ if your work was consistently excellent and occasionally brilliant. So, if you successfully complete all the assignments (great!), and also are a great class participant (thanks!), then I\u0026rsquo;ll look over all your work and make a value judgment about whether you deserve this rare and precious grade.\nFinal Note for 2018 \u0026ndash; this year, there isn\u0026rsquo;t really a \u0026ldquo;D\u0026rdquo; grade. To pass the course you basically have to get a C. In rare cases I will consider lowering the grading criteria for the \u0026ldquo;Oral History\u0026rdquo; assignment to permit a student to scrape through the course.\nParticipation Criteria Your participation mark is a combination of in-class and online participation.\nIn the Classroom But what makes for good class participation? You might want to start by reading How to discuss a book for history, which has lots of helpful suggestions. Really, please read it \u0026ndash; it\u0026rsquo;s illuminating. But, meanwhile, here are some hints:\n Show up for class: It\u0026rsquo;s hard to discuss when you\u0026rsquo;re not here. Do the Readings: It\u0026rsquo;s hard to discuss what you haven\u0026rsquo;t read. I will try hard not to assign too much reading; in return, please try to read it. Be Courteous: Treat your classmates with respect, even when your opinions differ fiercely. Refrain from interrupting others, notice when others have been waiting \u0026amp; let them speak first, and so on. Don\u0026rsquo;t shut other people down, and frame your comments in a way that invites further discussion. Listen: Pay careful attention when your classmates are speaking; if their ideas seem a little unclear, try to fill in the gaps, either by thinking silently, or by asking friendly, clarifying questions. Try to think about how their positions relate to yours, and, especially, whether you should perhaps change your mind a little based on what they have to say. Be Clear: think about the readings before you come to class, so that your opinions are well-formed. Be Brave: It can be intimidating to speak in class, especially if you have found the readings or the lecture confusing. But you will almost never be alone. If one person is confused, others likely are too. Have the courage to speak up \u0026ndash; everyone in the room is likely to thank you. If you are extremely shy in person, then come speak to me and we can try to work out a solution for you. Participate in Group work: Occasionally we will break up into small groups. The same princples apply to group work \u0026ndash; I\u0026rsquo;ll be paying attention.  Online Our Slack workspace is also a great way to participate. Contribute to the class in Slack by asking good questions, helping out your classmates, and correcting any professorial errors from lecture!\nFinally If you can do all of these things consistently, you\u0026rsquo;re likely to earn a \u0026ldquo;+\u0026rdquo;. If you\u0026rsquo;re not sure how you\u0026rsquo;re doing, come ask me in a couple of weeks and I\u0026rsquo;ll give you some feedback.\n"
},
{
	"uri": "https://digitalhistory.github.io/dh-website/tools/wrong-repo-fix/",
	"title": "Cloned the wrong repo? Here&#39;s a fix.",
	"tags": [],
	"description": "",
	"content": "Due perhaps to some outdated language somewhere in my course materials (sorry!) some of you appear to have accidentally forked the template repo rather than following the magic link to set things up the \u0026ldquo;official\u0026rdquo; way. Uh oh! Don\u0026rsquo;t worry, this is easy to fix. But please do it soon so I can grade all the assignments togetherHere/s are instructions for Assignment 0. If you\u0026rsquo;ve stumbled into this problem later in the semester, you\u0026rsquo;ll need to adjust them as appropriate:\n Click on this link. Your \u0026ldquo;proper\u0026rdquo; repo will be created, and you will be shown a link to the new repository. Clone the new repo. You know how to od this already \u0026ndash; it can all be done from inside VSCode. Copy your json file to the right place in the new repo. Stage and commit the change Do the same with your reflection and your image files run npm install and npm test to confirm that everything\u0026rsquo;s good. push your changes  You should now be done!\n"
},
{
	"uri": "https://digitalhistory.github.io/dh-website/tools/assignment-git-tips/",
	"title": "Git Tips for Assignments",
	"tags": [],
	"description": "",
	"content": " Well the first assignment is done. Whew! There were some common git issues that came up, and I hope we can cut back on them by documenting them here.\nLearn how to navigate! The command line is very new to everyone, and I did a lousy job of explaining how to traverse the filesystem from the terminal. I have now posted some instructions that should help with this. Pro tip: in both Windows and Mac, you can open a terminal/git-bash window by right clicking on a location and clicking the \u0026ldquo;terminal here\u0026rdquo; or \u0026ldquo;bash window here\u0026rdquo; buttons (screenshots anyone?). This should help reduce the amount of time spent hopelessly floundering in the early stages of command-line training.\nDon\u0026rsquo;t commit .DS_Store Mac users: MacOS creates these annoying files in every directory. They are useless for non-mac users and clutter up the repository. I have taken steps that should stop you from accidentally adding these files to your repository, but if you have already started work on Assignment 1 you may have cloned the repository too early to get the benefits of that work. Here\u0026rsquo;s how you remove `.DS_Store` files from a repository:\n first, navigate to the repository root directory in a terminal window then, type the following commands (dark magic!):  find . -name .DS_Store -print0 | xargs -0 git rm -f --cached --ignore-unmatch echo \u0026quot;.DS_Store\u0026quot; \u0026gt;\u0026gt; .gitignore git commit -a -m \u0026quot;Git thee behind me, .DS_Store\u0026quot;  For an explanation of these commands, you can look at random posts o n the Internet, ask Stackoverflow, or read the official manuals (at least on MacOS) by typing man find, man xargs, man echo, and man gitignore. A lot of those explanations will be kind of complicated, though, especially the (insanely complicated) find manual.\nNote: this command doesn\u0026rsquo;t actually delete the files - -they will still be there, but git will act as though the files have been deleted, and will not \u0026ldquo;see\u0026rdquo; and files named .DS_Store when it looks for untracked files.\nBeware package-lock.json Deprecation notice: you shouldn\u0026rsquo;t have to follow these instructions. check to make sure that package-lock.json is not present in your web fork. If it is, then something has gone wrong and you should follow these steps.\nUnfortunately I rather misunderstood how package-lock.json works (because of outdated documentation). As a result I have removed it from the repository. You should remove it, too. As above, you can do so by navigating to the repository root and typing:\ngit rm --cached package-lock.json echo \u0026quot;package-lock.json\u0026quot; \u0026gt;\u0026gt; .gitignore git commit -a -m \u0026quot;Goodbye, package-lock.json!\u0026quot;  Again, the file package-lock.json will still be on your computer, but git will act as though it had been deleted, and won\u0026rsquo;t ask you to change it anymore.\nSPECIAL FOR ASSIGNMENT 1! I\u0026rsquo;ve made some late-breaking changes to Assignment 1 to help with these issues. I\u0026rsquo;ve managed to push those changes to all of your repositories, so please pull in my changes by executing `git pull`. Everything below is DEPRECATED, but I\u0026rsquo;m keeping the info up here just in case something goes wrong.\nDeprecated detailed instructions \u0026ndash; DON\u0026rsquo;T FOLLOW THESE UNLESS SOMETHING HAS GONE TERRIBLY WRONG You have 2 choices:\n take the steps described above, then manually update package.json and test/test-node.js as described below take the steps described above, then carefully read the new instructions \u0026ndash; which tell you to name your reflection Reflection/reflection.md rather than Reflection/yourgithubid.md \u0026ndash; and ignore the fact that your tests are failing take a chance and do some fancy gitwork as described in the final section, below.  package.json and test/test-node.js have been updated. Be careful! I\u0026rsquo;ve updated the tests a little bit to make it easier to run automated tests. My recommendation is as follows:\n update package.json so that it\u0026rsquo;s exactly the same as mine. You really don\u0026rsquo;t want there to be even 1 character of difference, or git might be mad at you. Here\u0026rsquo;s my current version, and here it is in the Github web interface.  Pulling changes from Assignment 1 [ADVANCED!] Alternatively\u0026hellip; you can take care of almost all of the above issues by pulling my changes directly from the assignment repository. But, beware! There\u0026rsquo;s a chance there will be \u0026ldquo;merge conflicts\u0026rdquo; and your whole repo will get screwed up. Still, here\u0026rsquo;s how i would do it:\n first, make sure all of your changes have been committed with git commit -a -m \u0026quot;emergency commit\u0026quot; Then make a note of the current git commit \u0026ldquo;hash\u0026rdquo; by executing git log. The output will look kind of like this:  commit cf369d7a9d7282270a95ab1ff0f8718b84015bfb (HEAD -\u0026gt; development, origin/development) Merge: bd1c351 734d07c Author: Matt Price \u0026lt;matt.price@utoronto.ca\u0026gt; Date: Thu Jan 18 08:37:22 2018 -0500 Merge tag 'fix-json' into development fix it! commit 734d07cd1b25ff428d13b802b07741aed470c5cd (tag: fix-json, origin/master, origin/HEAD, master) Merge: 62423b7 e9c8f65 Author: Matt Price \u0026lt;matt.price@utoronto.ca\u0026gt; Date: Wed Jan 17 22:07:30 2018 -0500 Merge branch 'hotfix/fix-json' commit e9c8f6507ec13a4c53cff1c35293fc2c70d68f8e Author: Matt Price \u0026lt;matt.price@utoronto.ca\u0026gt; Date: Wed Jan 17 22:05:27 2018 -0500 remove syntax-breaking comma travis build should succeed now  The strange string of numbers and letters is called the \u0026ldquo;commit hash\u0026rdquo;. Copy the one at at the top to a safe location. In this example the hash to save would be cf369d7a9d7282270a95ab1ff0f8718b84015bfb.\n now the dangerous step \u0026ndash; pull from my repo and merge into yours! git pull https://github.com/DigitalHistory/assignment-01-html-css.git master if there are conflicts, you can either try to fix them, or (my recommendation) completely undo the merge by resetting your repo to the last working state. For this you need that hash you copied a couple of steps ago. This command will completely reset your master branch to the place it was before you tried to merge in my work: git reset --hard cf369d7a9d7282270a95ab1ff0f8718b84015bfb (remember to use YOUR hash, not mine!)  Looking forward to hearing how all of this goes!\n"
},
{
	"uri": "https://digitalhistory.github.io/dh-website/tools/node-dependencies/",
	"title": "Installing Node Dependencies",
	"tags": [],
	"description": "",
	"content": " Or, \u0026ldquo;the nightmarish hellscape that is node.js installation\u0026rdquo;.\nNode.js is an exquisite piece of programming infrastructure. One of its main features is support for developer-defined dependencies. As a programmer \u0026ndash; or in my case, as a teacher \u0026ndash; you can inform the underlying node package manager (npm) that your project \u0026ldquo;depends\u0026rdquo; on some group of other projects. This allows programmers to build constantly on each other\u0026rsquo;s work.\nIn our assignments, node dependencies are mostly used to enable the tests, whose main function is to help you figure out whether you\u0026rsquo;ve done the assignments correctly. Installing node dependencies is pretty simple, but can be confusing if you\u0026rsquo;re completely new to node, the command line, and programming in general. Here are the (very simple!) instructions:\n Install Node and NPM as per this section of the \u0026ldquo;Setup\u0026rdquo; instructions From the command line, navigate to the root directory of your repository using cd as per the navigation help page From the root directory of your repository,type the following command into the terminal/git-bash prompt: npm install  You should see some complex output from the command, after which your node dependencies will be installed. You can actually see the installed files by browsing the contents of the node_modules directory, which should now be present in your working directory.\nOnce the dependencies are installed, you should be able to run the node tests with npm test (issued from the same directory, that is, the root directory of your repository).\nI hope that helps!\nInstalling global packages Some advanced features of VSCode will only work if you install so-called \u0026ldquo;global\u0026rdquo; node packages in a special way. You can do this for one important package from the command-line with npm install -g eslint. You may urn into problems though; if so, don\u0026rsquo;t worry about this for now.\n"
},
{
	"uri": "https://digitalhistory.github.io/dh-website/tools/js-resources-tools/",
	"title": "Javascript: Resources and Tools",
	"tags": [],
	"description": "",
	"content": " Resources There are many, many excellent JavScript resources on the web. I strongly recommend the MDN JavaScript Learning Pathway. For this assignment, you will want to read much of First steps and Building Blocks. I also have a very high opinion of Eloquent Javascript, but in past years students have often found it somewhat difficult. However, it rewards careful study, teaches excellent habits, and encourages creative thinking while coding. Both MDN and EJ have built-in JS Consoles forexperimenting with code (see below).\nMDN also has a more advanced guide to JavaScript which starts with this \u0026ldquo;reintroduction\u0026rdquo;. This can be worth consulting if you want more information.\nConsoles and Playgrounds Sometimes you will want to try out your code and test out your ideas before putting them in a permanent file. There are various tools for this.\n Browser consoles and scratchpads Your browser has a built-in \u0026ldquo;console\u0026rdquo; where you can enter javascript commands and see their output. See the Setup doc for more info. node console Unfortunately, VSCode does not have a built-in javascript console. However, you can easily create one in a terminal window by running the command node. Exit by typing Control-d or Control-c Control-c or .exit. VSCode Debugger VSCode has an excellent debugger. However, debugging is a complicated subject. If you want to try to use these tools, read the docs. VSCode extensions There are many excellent VSCode extensions for JavaScript. You can experiment with quokka, for instance. Online Playgrounds These can be fantastic resources, but they make more sense for web-based programming. We may discuss these later in the course.  "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/tools/navigating-command-line/",
	"title": "Navigating at the Command Line",
	"tags": [],
	"description": "",
	"content": " The Programming Historian link below is excellent, and provides some great screenshots.\nOne common issue for people new to the command line is that it can be tough to understand the notion of location in the filesystem. Most ordinary users interact with their filesystems through the so-called GUI layer \u0026ndash; the graphical interface of windows. Often the user-accessible files are more or less restyricted to special directories (or \u0026ldquo;folders\u0026rdquo;) with meaningful names like Desktop, MyDocuments, etc. However, once you start working at the command line this convenient feature can become something of a curse. It\u0026rsquo;s important to recognize that these special locations are just part of a complex, hierarchical filesystem \u0026ndash; a branching tree of directories and files, on which your operating system relies in many ways. You will need to learn to navigate that filesystem, not from the GUI, but from the command line.\nWhen you first start using the command line, it often feels (a) confusing and (b) somehow primitive or over-simple. The command line is, in fact, a sophisticated and incredibly efficient way to interact with the filesystem \u0026ndash; but you need to learn your way around it first. In this class we won\u0026rsquo;t discuss the wonderful world of shell scripting (see below for guides to scripting); instead, I just want you to learn a few very basic commands to help you move around.\nNavigation The file system is a \u0026ldquo;branching tree\u0026rdquo; of files and folders. At the top (or bottom, depending on how you imagine things) of the tree is the \u0026ldquo;root\u0026rdquo;. In bash, we represent this as /. Every folder has a path that starts with / and proceeds down the file hierarchy. So, for instance, my global git configuration is located at /home/matt/.gitconfig. / is the root. /home/ is where all user files can be found. /home/matt/ contains all my user files. /home/matt/.gitconfig identifies the specific file I\u0026rsquo;m looking for.\nYour file explorer will represent this tree for you visually; you can also picture it schematically, as is done e.g. in the following image: We can also explore from the command line. Here are a few basic commands to learn for this purpose. [ Note: in the screenshots below, my command prompt is heavily customized and includes some extra information. Most notably, it tells me when I am in a git repository and gives me the name of the current git branch. You can experiment with changing your bash prompt in the ~/.bashrc file that controls many features of the\npwd pwd is short for \u0026ldquo;print working directory\u0026rdquo;, and will show you where you are in the file system. ls ls will list the contents of a directory. With no further arguments it will list the directory you\u0026rsquo;re currently in, but you can ask it to list some other directory too. Here are some examples. Note the \u0026ldquo;switches\u0026rdquo; -l and -la. Switches give further instructions to the command. In this case -l means \u0026ldquo;long\u0026rdquo; while -a is short for \u0026ldquo;all\u0026rdquo;. You can see in the screenshot below what the effect is. cd Short for \u0026ldquo;change directory\u0026rdquo;, cd allows you to move through the filesystem.\n cd someDirectoryName will move you into the subdirectory \u0026ldquo;someDirectoryName\u0026rdquo; of your current directory. cd with no arguments, or \u0026ldquo;cd ~ \u0026ldquo;, will drop you back into your home directory (this is helpful if you get lost somehow). At the command line, the tilde (~) is short for \u0026ldquo;home directory\u0026rdquo;, so you can use it anywhere instead of typing out your whole whome directory name. cd .. or cd ../ will move you \u0026ldquo;up\u0026rdquo; one level in the filesystem \u0026ndash; so if you are currently in /home/matt/digitalHistory, executing cd .. will move you to /home/matt/.    cat and less Sometimes you want to look at the contents of a file. cat and less are two ways to do so. cat will print the contents of the file directly to your terminal window. less will create a simple interface that you can use to scroll through a longer file using a keyboard interface. mkdir and touch mkdir will create a new directory, while touch will create a new (empty) file.\nmkdir some-directory-name touch some-directory-name/somefile.txt  These commands will create the file somefile.txt in the folder some-directory-name, inside the current working directory.\nArrow Keys and Tab Expansion often we make mistakes typing or are unsure of spelling, etc. Two kinds of shortcuts make for huge time savings:\n arrow keys can be used to navigate through your previous commands \u0026ndash; typing ↑ will reproduce your previous command, allowing you to correct any errors you might have made the last time you typed out some complex command and made a small error. Each time you type an ↑, you will move one command up in the command history. To get back down, type ↓. you can type TAB part way through a command to get a list of possible completions. If there\u0026rsquo;s only one possible command that starts with what you\u0026rsquo;ve typed so far, bash will complete it for you. Similarly, typing part of a file or directory name after a command has been entered will usually get you a list of possible completions. Try it a few times and you\u0026rsquo;ll see how much time it saves. often I want to repeat an earlier command that I entered a few minutes previously. Rather than  Learn More OK, that\u0026rsquo;s all for now, hopefully this helps you navigate around your projects. I may add to this guide as we go through the semester, but here are some further guides.\n this introduction is quite clear and simple the programming historian has a great guide too the TLDP guide introduced generations of programmers to bash scripting, and is still a useful reference point  "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/tools/setup/",
	"title": "Setup",
	"tags": [],
	"description": "",
	"content": " For the duration of this course, you will need to set up a \u0026ldquo;development environment\u0026rdquo; to do your work. You\u0026rsquo;ll need to download,install, and interact with a group of programs and services that make it possible to do your work. Setting your environment up can be difficult, so be sure to budget some time to do so! Also be aware that these tools will take up significant spae on your laptop and may cause your laptop to slow down somewhat if run simultaneously with\nPlatform Notes I run Arch Linux on my laptop, and have experience with Ubuntu as well. For the purposes of this class, I have installed Windows 10 Education Edition (available free to U of T students here). I wil also attempt to support MacOS as best I can.\n if you have an earlier edition of Windows, some of our tools may not work properly. I encourage you to upgrade to Windows 10 Education Edition, which has good support for modern tools. if you have a Chromebook, you will need to install a full Linux OS in order to do the coursework. If you are lucky enough to have a recent, powerful Chromebook, you may be able to use Google\u0026rsquo;s official \u0026ldquo;Crostini\u0026rdquo; tool. Otherwise, Gallium OS and Crouton are the two recommended tools for this, and you can find some instructions here. It\u0026rsquo;s not easy, and I won\u0026rsquo;t be able to help you. If this seems hard, you may want to think about buying an inexpensive, older laptop and installing an ordinary Linux distribution. Here are two lists of distributions, but the choice is up to you.  Details Here\u0026rsquo;s the table of tools from the syllabus:\n   Tool On Mac On Windows On Linux (debian/ubuntu commands)     Real Web Browser Firefox and/or Chrome Firefox and/or Chrome Firefox and/or Chrome   Text Editor VSCode VSCode VSCode   Bash Shell Environment Terminal (Built in) Git for Windows or Windows Subsystem for Linux gnome-terminal, qterm, etc   Git Version Control Git for OSX Git for Windows apt-get install git   Slack Community Client Download, Signup Link Client Download, Signup Link Client Download, Signup Link   Github Org Membership Sign up here Sign up here Sign up here   Git Visualization (deprecated) gitKraken gitKraken gitKraken   Node and NPM Node Website (guide) Node Website (guide) Node Website (distro instructions)    If you\u0026rsquo;re comfortable exploring and installing software, you can probably get set up quickly by following the links above. Please nonetheless read the detailed instructions below. Things will go smoother if you do!\nWeb Browser All of our work will involve interacting with the World Wide Web. Firefox and Chrome are head and shoulders above all other web browsers, and you should install one (or preferably both) of them. In class, I will use Firefox almost exclusively. If you haven\u0026rsquo;t tried Firefox for a while, give the new Quantum version a try\u0026rsquo; it is much, much faster and more stable than its predecessors.\nBoth have highly sophisticated developer tools with which you should familiarize yourself. As you learn more about web design, you\u0026rsquo;ll come to rely on these tools more and more. Follow these links for more about Firefox Dev Tools and Chrome\u0026rsquo;s version.\nOf particular value in both Chrome and Firefox is the \u0026ldquo;Javascript Consoles,\u0026rdquo; accessible from the developer tools: Tools \\rarr Web Developer \\rarr Console or Menu \\rarr More Tools \\rarr Developer \\rarr Console\nThe Firefox console is a little awkward to use for multi-line programming, so they have also provided a \u0026ldquo;Scratchpad\u0026rdquo; tool (Shift-F4), which I find helpful, though I now often use VSCode\u0026rsquo;s Javascript console instead (see \u0026ldquo;Text Editor\u0026rdquo;, below).\nThe other tool I use all the time is \u0026ldquo;inspect element\u0026rdquo;, available by right-clicking on any part of a web page. Both of these tools will prove essential for figuring out why your code isn\u0026rsquo;t working right!\nText Editor If you want to code, you have to write like a coder. This means using a powerful text editor. In this class we use Visual Studio Code. Please follow the download links and install to your computer. There\u0026rsquo;s a separate post about using VSCode \u0026ndash; once you\u0026rsquo;ve installed it, navigate there!\nCommand Line Web developers and digital humanists spend a lot of their time in the command-line environment, interacting with their computers through text-based commands instead of a mouse or voice interface. It takes some time to learn to use the command-line, but it\u0026rsquo;s a very powerful and effective way to work once you get used to it. One goal of this course is to help you get comfortable in this environment and learn to take advantage of its power.\nThere are actually many different command-line environments; in this class we use bash, the most popular.\nOn Mac and Linux, bash is built in to the system. In Mac, open the Terminal app to find the bash prompt; in Linux you may have any of several terminal emulators installed, search your program list for \u0026ldquo;term\u0026rdquo; to find yours.\nIn Windows, bash comes with the Git installation \u0026ndash; follow the instructions below. Note that very recent editions of Windows 10 come with the \u0026ldquo;Windows Subsystem for Linux (WSL)\u0026rdquo;, which you can use instead of the Git Bash method.\nIMPORTANT UPDATE: VSCode has an integrated terminal, and it\u0026rsquo;s extremely useful. Windows users will have to do a little bit of work in order to use bash in the integrated terminal. See the excellent terminal configuration instructions online, and be sure to follow the link explaining how to access the user settings screen in VSCode.\nGit, Github, and GitKraken Software development is made vastly easier by \u0026ldquo;version control\u0026rdquo; systems: specialized software that keeps track of the history and current state of files and directories. In the past there were many such systems, but now almost the whole user uses git, and we\u0026rsquo;re all grateful for it.\nInstall Git To install git, follow the download links on the website (see the table above for OS-specific links and instructions. We\u0026rsquo;ll come back to the Git command-line in a minute.\nSign up for Github For many developers \u0026ndash; maybe even most of them \u0026ndash; using Git is intimately tied to the Github code-sharing website. We\u0026rsquo;ll be using Github for almost all of our work this semester, so it\u0026rsquo;s important that you get familiar with it. If you were present for the first class, you\u0026rsquo;ve already done this. If not, you\u0026rsquo;ll need to sign Up for a Github account. Once you\u0026rsquo;ve done that, you have two choices:\n practice working at the command line go straight to a GUI (\u0026ldquo;Graphical User Interface\u0026rdquo;) that will make working with git a little more comfortable.  I recommend at least trying the command line first.\nCommand-line Setup You need to tell git a little bit about yourself. Start with your email address and your user name. Open your bash shell (Terminal in Mac, git-bash in Windows) and type:\ngit config --global user.name \u0026quot;Your Name\u0026quot; git config --global user.email \u0026quot;youraddress@ mail.utoronto.ca\u0026quot; git config --global github.user YourGithubId  Great \u0026ndash; now git knows who you are. If you\u0026rsquo;re feeling ambitious, you can also set up SSH keys so you don\u0026rsquo;t have to type in your password every time you commit to Git.\nVSCode Git VSCode also has an interface to Git and Github. It\u0026rsquo;s pretty powerful and intuitive, so I recommend trying it before installing GitKraken. The instructions are here.\nUsing the GitKraken GUI client Sometimes it\u0026rsquo;s nice to have a backp. GitKraken is an impressive visual tool that also makes it easy to configure all of your information. They have a nice video about SSH integration, which you can watch if you like.\nLearn more There is a somewhat more wordy Git tutorial on this website, which you should read. For now, Install the Github Desktop App which also includes the command-line version of git. You can follow the excellent tutorial in the downloadable git-it application, as well as the Github Desktop documentation. There is also a quite helpful tutorial on The Programming Historian. We\u0026rsquo;ll be discussing Git and Github further in our first class.\nNode and NPM \u0026ndash; This is the hardest part! Right now it looks like the drag and drop tool we wanted to make will NOT be ready for this semester :frowning_face:\nInstalling Node is not strictly necessary for the first assignment. If you are having trouble, put this off till next week.\nMost of our programming work will involve Javascript, which runs most of the web. The Node.js environment and its \u0026ldquo;package manager,\u0026rdquo; NPM, are an incredible resource for Javascript development. In fact, Slack, VSCode, and gitKraken are all written as Node applications themselves! Installing the \u0026ldquo;bare\u0026rdquo; versions of node and NPM lets us access some of that power while we work.\nYou can survive this class without installing Node, but without it, you won\u0026rsquo;t be able to run the test suites that accompany all of the assignments. You\u0026rsquo;ll therefore be at a disadvantage in the class, because the tests offer hints about what\u0026rsquo;s wrong with your code.\n In Mac and Linux, the instructions linked to in the table above are probably good enough. In Windows, you may follow all the instructions and then find yourself getting an error (\u0026rdquo;Command not found\u0026rdquo;). If that happens, you may want to try the instructions laid out here, or if you\u0026rsquo;re on Windows 10, you could go crazy and install the amazing Windows Subsystem for Linux, which allows you to work as if your computer had a real Unix operating system like everyone else.  The details of Node and NPM are a little outside the scope of our class, but a colleague at the University of Washington has an excellent introduction in one of his courses.\nSlack Slack is not strictly necessary to do your work, but it is the principal means of conversation for the class. Your activity in our Slack team is part of your participation assessment. So, please sign up for the team using the signup links above, and if you\u0026rsquo;re not familiar with Slack already, read some of the Slack documentation.\n"
},
{
	"uri": "https://digitalhistory.github.io/dh-website/tools/",
	"title": "Tools and Tricks",
	"tags": [],
	"description": "",
	"content": " Cloned the wrong repo? Here\u0026#39;s a fix. Git Tips for Assignments Installing Node Dependencies Javascript: Resources and Tools Navigating at the Command Line Setup Using VSCode  "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/tools/using-vscode/",
	"title": "Using VSCode",
	"tags": [],
	"description": "",
	"content": " Microsoft\u0026rsquo;s Visual Studio Code is an amazing general-purpose code editor. Most people I collaborate with use it as their primary editor, and that will be true in most professional settings you enter. This is the first year we\u0026rsquo;re using it in the class, and I have some high hopes for it.\nAs with any powerful tool, it can take a little while to get comfortable with VSCode. The documentation is excellent, but may sometimes assume more advanced programming skills than you have. The videos are also excellent and recommended.\nI will mostly let you explore on your own, but here are a few important starting points.\nEditor Basics   The editor has 4 main parts. Since each part can itself have lots of parts, this is not as simple as it sounds! From left to right, here are the main areas:\n the activity bar provides you with various tools and ways to switch views the side bar content changes depending on what you\u0026rsquo;ve selected i n the activity bar. By default, it shows a file tree listing, like you would find in windows explorer or the Apple Finder. But it can also provide a list of extensions, information about your git status, or information about project tests, among other things. the editor groups are clusters of tabs. Usually a tab will contain a file, but things like the VSCode preferences and live HTML previews also show up in this area the panels near the bottom include the built-in terminal, a list of errors VSCode has found in your files, and other important tools  Also, the blue status bar on the bottom has clickable areas that let you interact with other editor features.\nFinally, it\u0026rsquo;s important to mention the Command Palette. This is a magic bar that opens up in the top center of the screen when you type F1 or Control-Shift-P (Command-Shift-P on a Mac). This gives you rapid access to many, many commands, and we\u0026rsquo;ll use it a lot.\nRead more about the user interface here.\nExtensions There are many, many amazing extensions to VSCode. I\u0026rsquo;ve chose a small number of them and bundled them into an extension pack. Install it by clicking on the extensions button in the activity bar and typing searching for History Hack Pack. Follow the links in the documentation to learn more about the individual extensions.\n"
},
{
	"uri": "https://digitalhistory.github.io/dh-website/slides/01-1-git-and-github/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " Git and Github .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( 'link' ); link.rel = 'stylesheet'; link.type = 'text/css'; link.href = '../../vendor/reveal//css/print/pdf.css'; document.getElementsByTagName( 'head' )[0].appendChild( link ); }     Git!    \u0026ldquo;Track Changes\u0026rdquo; on steroids \u0026ldquo;version Control\u0026rdquo; software optimized for collaboration   collaboration    concepts: remote    Concepts: Branch    git history is a tree, not a straight line nothing is every lost!! can be hard to figure out!   Concepts: Commit    changes aren\u0026rsquo;t saved automatically; manually \u0026ldquo;commit\u0026rdquo; every commit can be revisited later a branch is really just a \u0026ldquo;pointer\u0026rdquo; to a specific commit (complicated)   Concepts: Merge    when we \u0026ldquo;merge\u0026rdquo; two branches, the changes from one are brought over into the other this doesn\u0026rsquo;t always mean they are identical! there can be conflicts!   Concepts: Merge conflicts    Concepts: Fetch and Pull      Concepts: Push  the inverse of pull: put your work in the remote repository     Github!  code-sharing site largest in history owned by Microsoft ☹ where we work!   History, Please!  Take out your Laptop!  Find yet another partner (work alone or help someone else if you\u0026rsquo;re very confident) Navigate to the History-Please repository Scroll down to the contributing instructions Follow the instructions on the course website:  make an account fork the repo add some Candian history submit your changes as pull request  When you\u0026rsquo;re done, we\u0026rsquo;ll check out the wonders of open source first hand       Your Assignment  clone a repository say a few things commit your changes upload voila!   Get the Assignment here  https://classroom.github.com/a/isSHhGpz  Instructions are here: https://github.com/DH2019/00-class-profile/        // Full list of configuration options available here: // https://github.com/hakimel/reveal.js#configuration Reveal.initialize({ controls: true, progress: true, history: true, center: false, slideNumber: 'c / t', rollingLinks: false, keyboard: true, overview: true, margin: 0.10, maxScale: 1.00, theme: Reveal.getQueryHash().theme, // available themes are in /css/theme transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none transitionSpeed: 'default', multiplex: { secret: '', // null if client id: '', // id, obtained from socket.io server url: '' // Location of socket.io server }, // Optional libraries used to extend on reveal.js dependencies: [ {src: '../../vendor/reveal//plugin/klipse_reveal.js'}, { src: '../../vendor/reveal//lib/js/classList.js', condition: function() { return !document.body.classList; } }, { src: '../../vendor/reveal//plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }, { src: '../../vendor/reveal//plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } }, { src: '../../vendor/reveal//plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }] });    "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/slides/01-intro-digital-history/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " Introduction to Digital History .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( 'link' ); link.rel = 'stylesheet'; link.type = 'text/css'; link.href = '../../vendor/reveal//css/print/pdf.css'; document.getElementsByTagName( 'head' )[0].appendChild( link ); }    Introduction to Digital HistoryMatt PriceCreated: 2019-01-08 Tue 12:46\n  About Me    Historian of Science \u0026amp; Technology Interdisciplinary Background Interest in \u0026ldquo;Engaged\u0026rdquo; scholarship     Why Care about History? Why care about the Digital Age?  The World Out of Which We Come  The past is the world out of which we have come, the multitude of events and experiences that have shaped our conscious selves and the social worlds we inhabit. To understand how and why we live as we do, we cannot avoid appealing to the past to explain how andwhy we got to be this way. (Cronon 2000, p. 4)   Not just Fact but Story  It is remembering and storytelling we care about, not the raw past, because only by being perennially resurrected in the mind of each ne generation does the past become meaningful. Only this does it become a living memory which in turn gives meaning to our present lives by reminding us ho we are\u0026#x2013;as individuals, as a state and nation, as a people. (Ibid., p. 13)   A Digital Age  Opportunity:  masses of data tremendous participation   Challenge  filtering data trusting writers lack of collective experience   Our Project  Understand how to write history for a digital age!  what can we preserve? what opportunities are there for change? what has been done already?     Method  Intro to toolbox but tools keep changing therefore: simple coding, basic, standard tools, as a foundation for later learning     Syllabus  still largely uncharted territory (no canon, quite) 4 blocks  Text \u0026amp; Code | Basic programming literacy Data Driven History | \u0026ldquo;Distant Reading\u0026rdquo; Maps \u0026amp; Visualization | Basic Web-based GIS Oral History \u0026amp; Crowdsourcing | Multi-media History    Objectives  At the end of this course, you should:  be able to describe to others what the phrase \u0026ldquo;digital humanities\u0026rdquo; means to you. be able to frame a coherent and nuanced argument of your own about the value of DH methods to the field of history be able to clearly state and defend a position regarding \u0026ldquo;engaged scholarship\u0026rdquo;, and articulate the relationship of your argument to the contemporary media landscape have a basic understanding of markup languages and their use in DH be able to make compelling use of media materials such as audio, video, and animation in historical arguments understand how to create simple historical maps, and have an opinion about the value of GIS in historical argument   Assignments      Assignment Due Date Skills/Aims A B C D     Class Profile 2019-01-17 Thu version control and collaboration \u0026#10004; \u0026#10004; \u0026#10004; \u0026#10004;   Zero to Blog Post 2019-01-29 Tue web markup and presentation \u0026#10004; \u0026#10004; \u0026#10004; \u0026#10004;   A Table of Ministers 2019-02-12 Tue Abstraction, loops, DOM \u0026#10004; \u0026#10004; \u0026#10004; \u0026#10004;   Using Data Sources 2019-03-01 Fri Object structure, substitution, text as data \u0026#10004; \u0026#10004; \u0026#10004; \u0026#xa0;   Spatial History 2019-03-15 Fri API\u0026rsquo;s, GIS \u0026#10004; \u0026#10004; \u0026#xa0; \u0026#xa0;   Oral History 2018-03-30 Fri API\u0026rsquo;s, Multimedia Narratives \u0026#10004; \u0026#10004; \u0026#10004; \u0026#10004;   Project Proposal 2019-04-05 Fri Imagine a Digital History Project \u0026#10004; \u0026#xa0; \u0026#xa0; \u0026#xa0;     Participation  come every time! pay attention and ask questions! no email/snapchat/reddit/facebook etc etc etc etc participate in Slack!   Assignment 0 and 1!  The first two assignments will be coming very soon! Keep an eye out.    Intros 1  Find someone you don\u0026rsquo;t know in 3 minutes, find out: Name; Year; Interest in the class; something else of interest Present yr classmate     Intros 2  find a different stranger spend no more than 8 minutes imagining a DH project present to another pair     Git!  \u0026ldquo;Track Changes\u0026rdquo; on steroids \u0026ldquo;version Control\u0026rdquo; software optimized for collaboration     Github!  Take out your Laptop!  Find yet another partner (work alone or help someone else if you\u0026rsquo;re very confident) Navigate to the History-Please repository Follow the instructions on the course website:  make an account fork the repo add some Candian history submit your changes as pull request  When you\u0026rsquo;re done, we\u0026rsquo;ll check out the wonders of open source first hand         // Full list of configuration options available here: // https://github.com/hakimel/reveal.js#configuration Reveal.initialize({ controls: true, progress: true, history: true, center: false, slideNumber: 'c / t', rollingLinks: false, keyboard: true, overview: true, margin: 0.10, maxScale: 1.00, theme: Reveal.getQueryHash().theme, // available themes are in /css/theme transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none transitionSpeed: 'default', multiplex: { secret: '', // null if client id: '', // id, obtained from socket.io server url: '' // Location of socket.io server }, // Optional libraries used to extend on reveal.js dependencies: [ {src: '../../vendor/reveal//plugin/klipse_reveal.js'}, { src: '../../vendor/reveal//lib/js/classList.js', condition: function() { return !document.body.classList; } }, { src: '../../vendor/reveal//plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }, { src: '../../vendor/reveal//plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } }, { src: '../../vendor/reveal//plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }] });    "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/slides/02-what-the-web-signifies/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " What the Web Signifies .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( 'link' ); link.rel = 'stylesheet'; link.type = 'text/css'; link.href = '../../vendor/reveal//css/print/pdf.css'; document.getElementsByTagName( 'head' )[0].appendChild( link ); }     Review  4 blocks Assignment 0 is online Assignment 1 is coming, preview is here. Intro to Git     Today  Concept of the \u0026ldquo;Public Sphere\u0026rdquo; Internet and Habermas\u0026rsquo;s conception Discussion   more Git Brief HTML explication HTML Exercise    Phrase \u0026ldquo;Technical Affordance\u0026rdquo;     Significance and Signification  What matters about the web? How does the web create and change meaning?   Significance: what is its importance? Signification: how does the web introduce or trransform meaning?    What matters about the web?  Web has had enormous effects  economic political cultural but I want to talk about discursive does the web change what kinds of conversations we can have?  for the better, or for the worse?    \u0026ldquo;peculiar :technical affordances\u0026rdquo; of this technological system  tech systems make some things possible \u0026amp; other things impossible. Or, at lease: some thing easy and other things very difficult. ex: chainsaw vs. jigsaw. Table saw vs. Band saw. Pencil vs. pen.       Part I: The Public Sphere  Authenticity in a media age  Figure 1: Jürgen Habermas   Mid-century anxiety Appearance of new media (radio, TV, new kinds of magazine) Are these \u0026ldquo;degraded\u0026rdquo;? Do the media make us stupider? Less critical? More pliable?   Reasons to worry     maybe there are material conditions that make this sort of evil possible? perhaps the media of communication have a role?   The Public Sphere  A portion of the public sphere comes into being in every conversation in which private individuals assemble to form a public body.  \u0026#x2013; J. Habermas    Habermas wants us to believe in the reality of the \u0026ldquo;public sphere\u0026rdquo;, as a discursive body composed of conversations that have a certain form   Jürgen Habermas (b. 1929)  pre-eminent German public intellectual of 1960\u0026rsquo;s and 1970\u0026rsquo;s role of Holocaust/Fascism in all his thinking inheritance from the Frankfurt School search for \u0026ldquo;authentic\u0026rdquo; forms of communication   Concept of the Public Sphere  By \u0026ldquo;the public sphere\u0026rdquo; we mean\u0026#x2026; a realm of our social life in which something approaching public opinion can be formed\u0026#x2026; Citizens behave as a public body when they confer in an unrestricted fashion \u0026#x2013; that is, with the guarantee of freedom of assembly and association and the freedom to express and publish their opinions \u0026#x2013; about matters of general interest. (Habermas 1964, p.49[p.2])   Unpacking:  \u0026ldquo;something approaching public opinion\u0026rdquo;: suggests that \u0026ldquo;public opinion\u0026rdquo; has a technical meaning Conferring in an unrestricted fashion: the public sphere requires a certain kind of freedom Matters of general interest: we\u0026rsquo;re not talking about breakfast, jeans, or lipstick.      Public and Private     Public Private     open to all restricted   accessible for money closed even if you can pay   state-related non-state, civil society   political non-political   official non-official   common special   impersonal personal   national or popular group, class, or locale   international/universal particular/finite   in view of others concealed   outside the home domestic   circulated in print/electronic media circulated orally/in manuscript   known widely known only to a few   acknowledged/explicit tacit/implicit     many definitions not all of them part of Habermas\u0026rsquo;s terminology      Concept of the Public Sphere  Strukturwandlung der Öffentlichkeit (1962)  Arena ruled by rational argument Freedom of expression prevails (\u0026#x2026;an unrestricted fashion) Conversations concern common interests (e.g. ?) both ideal and historical arises first in 18th Century flourishes and then withers in 19th at a nadir in 20th; can it be revived?   Habermas\u0026rsquo;s Habilitation and first important book. but 35 years old!!     Before Bourgeois Society  There is no \u0026ldquo;Public Sphere\u0026rdquo; Instead there are \u0026ldquo;Public Individuals\u0026rdquo; with certain powers  and Church authorities, empowered to speak on moral matters  Opposed to these are \u0026ldquo;private persons\u0026rdquo;   Begin the historical story w/ the classic trnasition to a bourgeois/capitalist society around 1800.  before this point, not public sphere, just public individuals, who are distinct from \u0026rsquo;private persons\u0026ldquo;    Private and Public Persons  A private person has no right to pass public and perhaps even disapproving judgement on the actions, procedures, laws, regulations, and ordinances of sovereigns and courts\u0026#x2026;. or to publish in print pertinent reports that he manages to obtain. For a private person is not at all capable of making such judgment, because he lacks complete knowledge of circumstances and motives.  \u0026#x2013; Frederick \u0026rsquo;the Great\u0026rsquo; of Prussia, 1784   \u0026ldquo;Private\u0026rdquo; and \u0026ldquo;Public\u0026rdquo; distinguish types of person, not types of activity.     18th Century Origins  How do we get from a monarchy in which only \u0026rsquo;public persons\u0026rsquo; have license to speak on \u0026rsquo;public matters\u0026rsquo;, to a \u0026rsquo;public sphere\u0026rsquo; which is opened more widely?  Rise of newspapers/journals. Intrusion of private commentary on \u0026rsquo;public\u0026rsquo; matters  a new kind of media  rise of salons \u0026amp; coffee houses.  a new kind of sociality.    Salons and Coffee Houses      Salons and Coffee Houses  Salons as the heart of intellectual activity in c. 18  \u0026rsquo;monopoly on first publication\u0026rsquo; mixing of classes freedom from patronage  Coffee Houses a similar space  But no restrictions on topics of discourse matters of politics as frequent a topic as art  an ideal of common humanity esp. in coffee houses  opinions judged by reason alone  no intrusion of \u0026rsquo;distinction\u0026rsquo; or finance  [ but note: imperfection of this vision ]    one of the longstanding critiques of Habermas is the actual restrictiveness of coffee houses in real life. Who\u0026rsquo;s excluded? make a list: women, the truly poor, non-Europeans, the uneducated (to some extent),   Circulation  Communication across broad spaces \u0026amp; differences needs something more than conversation need a way get ideas to large numbers  news sheets \u0026rarr; newspapers letters \u0026rarr; journals    Markets  Through newspapers \u0026amp; journals conversation becomes a commodity Therefore it loses its exclusivity so, in the beginning, commodification is a good thing   This process of commodification, and its trasformation from a positive, welcome force in to a troubling, destructive one is central to H but is not just his idea.     The State vs. Society  This is all happening in a pre-democratic era (mostly) \u0026rsquo;The People\u0026rsquo; are a problem for the state growth of \u0026rsquo;the social\u0026rsquo; a threat to sovereignty \u0026rsquo;public sphere\u0026rsquo; precarious and subject to dissolution   The Structure of the Public Sphere      Private Realm Public Sphere Sphere of Public Authority     Civil Society (Commodity Exchange, social labour) Political Public Sphere State   Conjugal Family Literary/Philosophical Public Sphere Court     the public sphere sits between Private Life and Authority, striving for independence from both it mediates between them and draws its legitimacy from its use of reason note that it presupposes an emergent realm of \u0026ldquo;privacy\u0026rdquo; \u0026#x2013; and so, it is grounded in that notion, like all liberal philosophical constructs     From Debate to Consumption  Public Sphere in effect undoes itself success of media dissolves the reciprocal creation \u0026amp; communication of ideas  instead we just consume reason begins to vanish  Massive growth of media in c.20  radio, television, film  The Public Sphere: A Hollow Shell?  Where is its legitimacy?      Reception  extremely influential with some questions about both the historical and the philosophical elements of the story.   Counterpublics  \u0026#x2026;some publics are defined by their tension with a larger public\u0026#x2026; Discussion with such a public is understood to contravene the rules obtaining in the world at large\u0026#x2026; This kind of public is, in effect, a counterpublic: it maintains at some level\u0026#x2026; an awareness of its subordinate status. \u0026#x2013; M. Warner (2002)   One or Many?  Habermas sees Public Sphere as necessarily unitary But discourse carves out separate spaces  that may correlate with social divides \u0026#x2026; and where the addressee (\u0026ldquo;stranger\u0026rdquo;) is presumed to share a common subordination with the speaker  (\u0026ldquo;Given the fact that almost anyone can contribute to public discourse, the multiplicity of perspectives makes it even more difficult to define public opinion. Any designation of public opinion then becomes arbitrary\u0026rdquo;)   Disinterested or embodied?  for Habermas separation of individual from both \u0026ldquo;accidental\u0026rdquo; circumstances and official capacities is paramount Warner: This is fictive  and anyway undesirable  because some kinds of \u0026ldquo;argument\u0026rdquo; are fundamentally corporeal this doesn\u0026rsquo;t make them less legitimate does it?     Reading or Acting  Habermas: the actions of a legitimate public sphere are actions of reading (scrutinize, judge, decide) Warner: in a counterpublic, there may be other sorts of actions (prance, diss, act up, fantasize, mourn)     How this matters for History  If there are many \u0026ldquo;publics\u0026rdquo;, then working to carve out a particular space for discourse can have salutary effects Modes of address and standards of comportment can differ across \u0026rsquo;publics\u0026rsquo; May even be possible to craft a \u0026rsquo;public\u0026rsquo; around our work.  though \u0026ldquo; it follows that the public exists only as long as the text is being engaged with\u0026rdquo;    Enter the Internet  Habermas\u0026rsquo; theory revolves around a technology and a social institution  enabled by print, threatened by TV can the Internet undo this dissolution? If so, how? if not, is it the apotheosis of that dissolution?    Digital History and the Public Sphere  Does the Internet provide a space for authentic public conversatoin? What are effects of the medium on how we pursue knowledge and truth?  state and corporate pressures algorithmic actors (!)   Technical Affordances of the web  instantaneous distribution distributed production machine-readable text algorithmic sorting   All of these are present in every web-based communication. But realms of the web have distinct affordances of their own: Reddit \u0026ne; twitter \u0026ne; facebook \u0026ne; The New York Times   Group Work  Groups of ~3 Pro- and Anti- 3 strongest arguments for/against Internet as an \u0026ldquo;authentic\u0026rdquo; public sphere         // Full list of configuration options available here: // https://github.com/hakimel/reveal.js#configuration Reveal.initialize({ controls: true, progress: true, history: true, center: false, slideNumber: 'c / t', rollingLinks: false, keyboard: true, overview: true, margin: 0.10, maxScale: 1.00, theme: Reveal.getQueryHash().theme, // available themes are in /css/theme transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none transitionSpeed: 'default', multiplex: { secret: '', // null if client id: '', // id, obtained from socket.io server url: '' // Location of socket.io server }, // Optional libraries used to extend on reveal.js dependencies: [ {src: '../../vendor/reveal//plugin/klipse_reveal.js'}, { src: '../../vendor/reveal//lib/js/classList.js', condition: function() { return !document.body.classList; } }, { src: '../../vendor/reveal//plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }, { src: '../../vendor/reveal//plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } }, { src: '../../vendor/reveal//plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }] });    "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/slides/03-1-abundance-and-opennness/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " Abundance and Openness .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( 'link' ); link.rel = 'stylesheet'; link.type = 'text/css'; link.href = '../../vendor/reveal//css/print/pdf.css'; document.getElementsByTagName( 'head' )[0].appendChild( link ); }     War is Peace. Freedom is Slavery. Ignorance is Strength.    Recap  \u0026ldquo;Public sphere\u0026rdquo; at a turning point Transformation by automated agents and encoded text   Plan for the day  Lecture Discussion: how do you respond to information abundance? post-class period ONLY for students who failed the tests, or did not receive a mark     History in the age of scarcity  The members of prehistoric societies did not think they lived in prehistoric times. They merely lacked a good preservation medium. (Auerbach, quoted in Rosenzweig)   lots was going on, lots of continuity, lots we will never know b/c oral preservation is terrible at outliving a cultural tradition    Scarcity  Historically, very little recorded Even less preserved historian\u0026rsquo;s task was to locate rare sources in faraway places   Implications  History skewed to those whose records appeared worth saving record always fragmentary  Historian free to fill in gaps  BUT: often possible to read large percentage of relevant sources     Age of Abundance  Tentative efforts are afoot to preserve our digital cultural heritage. If they succeed, historians will face a second, profound challenge–what would it be like to write history when faced by an essentially complete historical record? (Rosenzweig)   completely different situation than we used to have!    Abundance  much more recorded than in the past vastly more preserved, at least for now increasing percentage of historical works as well   Mechanical Speech  auto-preservation but by and for whom?   Google, FB, and Twitter are preserving lots of data. As are Tesla and Samsung. But who wil lget to see it? How does a historian compete?   Problems of Preservation  physical media software turnover \u0026amp; bitrot capturing dynamic/interactive media     What big data means for old documents  digitization does provide scale (or quantity) but does so at the price of rich, largely manual encoding. Visualization, customization, personalization, and similar analytical services increasingly familiar to us depend upon born-digital objects in which a great deal of structural and semantic knowledge has been encoded. The information captured on page images is, by contrast, implicit and often not directly accessible to the machines that will be always their first, often their only, and arguably their most important readers. (CILR)   Can we tell stories? Can we do research?  no longer possible to read everything!  who will read it for us? How will we be experts? Can we automate our reading?  Narrative form ill-suited to massive quantities of data  can we develop new types of narratives?  Big questions may be answerable!  What used to be pure speculation, can perhaps now be made more concrete and compelling  How does role of religion in public discourse change over time? how do railroads impact social and economic development? others?       The Preservation Challenge    and this      and this too    Remind you of anything?  The Party said that Oceania had never been in alliance with Eurasia. He, Winston Smith, knew that Oceania had been in alliance with Eurasia as short a time as four years ago. But where did that knowledge exist? Only in his own consciousness, which in any case must soon be annihilated. And if all others accepted the lie which the Party imposed -if all records told the same tale \u0026#x2013; then the lie passed into history and became truth. \u0026rsquo;Who controls the past,\u0026rsquo; ran the Party slogan, \u0026rsquo;controls the future: who controls the present controls the past.\u0026rsquo; And yet the past, though of its nature alterable, never had been altered. Whatever was true now was true from everlasting to everlasting. It was quite simple. All that was needed was an unending series of victories over your own memory. \u0026rsquo;Reality control\u0026rsquo;, they called it: in Newspeak, \u0026rsquo;doublethink\u0026rsquo;.   Remind you of anything?  Winston sank his arms to his sides and slowly refilled his lungs with air. His mind slid away into the labyrinthine world of doublethink. To know and not to know, to be conscious of complete truthfulness while telling carefully constructed lies, to hold simultaneously two opinions which cancelled out, knowing them to be contradictory and believing in both of them, to use logic against logic, to repudiate morality while laying claim to it, to believe that democracy was impossible and that the Party was the guardian of democracy, to forget whatever it was necessary to forget, then to draw it back into memory again at the moment when it was needed, and then promptly to forget it again: and above all, to apply the same process to the process itself. That was the ultimate subtlety: consciously to induce unconsciousness, and then, once again, to become unconscious of the act of hypnosis you had just performed. Even to understand the word \u0026rsquo;doublethink\u0026rsquo; involved the use of doublethink.   Everything.gov  Archive Everything Write the query tools \u0026ldquo;genome project\u0026rdquo; for government data     Openness  \u0026#x2026;ideas that were more-or-less serviceable in the world before networked computers\u0026#x2026; are now up for debate. The emergence of new rights regimes (such as open access, open content and open source) and the explosion of new information are manifestations of these changing costs. (Turkel)   Ideals of openness  rooted in Enlightenment       at the foundation of scholarship yet, not manifest in our scholarly journals \u0026amp; publishing regimes   Jefferson on Freedom of Information  It would be curious then, if an idea, the fugitive fermentation of an individual brain, could, of natural right, be claimed in exclusive and stable property. If nature has made any one thing less susceptible than all others of exclusive property, it is the action of the thinking power called an idea, which an individual may exclusively possess as long as he keeps it to himself; but the moment it is divulged, it forces itself into the possession of every one, and the receiver cannot dispossess himself of it. Its peculiar character, too, is that no one possesses the less, because every other possesses the whole of it. He who receives an idea from me, receives instruction himself without lessening mine; as he who lights his taper at mine, receives light without darkening me. That ideas should freely spread from one to another over the globe, for the moral and mutual instruction of man, and improvement of his condition, seems to have been peculiarly and benevolently designed by nature, when she made them, like fire, expansible over all space, without lessening their density in any point, and like the air in which we breathe, move, and have our physical being, incapable of confinement or exclusive appropriation. Inventions then cannot, in nature, be a subject of property.   the web as open space  Origins of Web wrapped up in ideologies of Freedom   \u0026ldquo;Information wants to be free - because it is now so easy to copy and distribute casually - and information wants to be expensive - because in an Information Age, nothing is so valuable as the right information at the right time. (Brand, ca. 1984)  When information is generally useful, redistributing it makes humanity wealthier no matter who is distributing and no matter who is receiving. (Stallman, ~1990, quoted by Dening)   but different freedoms compete \u0026ldquo;walled gardens\u0026rdquo; vs open access Struggles only intensifying, with battle lines not quite stable  net neutrality the Facebook problem Digital Public Library of America archive.org      Summary  Information Abundance comes with many challenges Preservation Interpretation Access   Future of the web and of historical scholarship depends on continued struggle over these contested values.\n       // Full list of configuration options available here: // https://github.com/hakimel/reveal.js#configuration Reveal.initialize({ controls: true, progress: true, history: true, center: false, slideNumber: 'c / t', rollingLinks: false, keyboard: true, overview: true, margin: 0.10, maxScale: 1.00, theme: Reveal.getQueryHash().theme, // available themes are in /css/theme transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none transitionSpeed: 'default', multiplex: { secret: '', // null if client id: '', // id, obtained from socket.io server url: '' // Location of socket.io server }, // Optional libraries used to extend on reveal.js dependencies: [ {src: '../../vendor/reveal//plugin/klipse_reveal.js'}, { src: '../../vendor/reveal//lib/js/classList.js', condition: function() { return !document.body.classList; } }, { src: '../../vendor/reveal//plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }, { src: '../../vendor/reveal//plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } }, { src: '../../vendor/reveal//plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }] });    "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/slides/03-2-css/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " And Now: CSS! .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( 'link' ); link.rel = 'stylesheet'; link.type = 'text/css'; link.href = '../../vendor/reveal//css/print/pdf.css'; document.getElementsByTagName( 'head' )[0].appendChild( link ); }     Reminder  HTML for structure/content; CSS for presentation Resources: Codeacademy CSS offerings; Learn Layout; Mozilla Developer Network; many other cool sites   Exercise for today: https://github.com/DigitalHistory/css-styling/    What you Need to Learn Today  syntax: selectors, rules, punctuation; jargon: colors, sizes where to look stuff up (!)     CSS Basics  \u0026ldquo;Cascading Style Sheets\u0026rdquo; Style sheet that \u0026ldquo;cascades\u0026rdquo; = overrides prior values     two \u0026ldquo;dimensions\u0026rdquo; to cascade (source order and specificity)  specificity is the hard/important one.      With and without CSS        CSS Selectors   h1 { color:blue; font-family:serif; font-size:24px; } div { border: 1px solid black; } div.main p { color:red; } #specialid { float:left; }    When you look at a CSS file, you will see it is divided into a bunch of stanzas, like this. Each of these stanzas is called a \u0026ldquo;selector statement\u0026rdquo;: They all follow the same pattern:  first, a selector that identifies the elements to which these instructions will apply then an open brace \u0026ldquo;{\u0026rdquo; which marks the start of the actual instructions then a series of property-value pairs. Each of these sets the value of a particular property (duh). Note that at the end of a property, there is always a semi-colon! finally, a closing brace that ends the selector declaration.    Selector Anatomy  h1#anatomy1 { display: inline-flex; padding: 15px; background-color: rgb(30,30,30,0.1); font-size: 1.4em; border: 2px gray solid; } h1#anatomy1 span {padding: 4px;border: 2px black solid; background-color: rgba(10,70,10,0.6);} h1#anatomy1 span.selector {background-color: rgba(150, 20, 20, 0.4);} h1#anatomy1 span.rule {background-color: rgba(70, 10,70, 0.4);} h1#anatomy1 span.value {background-color: rgba(10,150, 150, 0.4);}  selector.has  #funny:stuff { rule: value in (approved); }   Selector types  h1 { font-size: 2em; color: red; } p { font-size:5em} .coolpara { color:green; } #myfave { color:yellow; background-color: black; }   Heading Some Content\nSome Content\n   Though simple in principle, CSS selectors can be confusing. Here are some basic selector types:  Element selectors: these just give the element (like h1, p, div, span, etc.). they apply to all elements of this type. Class selectors: these give the name of a class attribute that an HTML element may have. This selector will always begin with a period (\u0026ldquo;.\u0026rdquo;). So for instance: ID selector: this addresses the element with a particular ID:    Selector types  div#cssdemo h1 { font-size: 3em; color: red; } div#cssdemo p { font-size:5em} .coolpara { color:green; } div#cssdemo #myfave { color:yellow; background-color: black; }   Heading Some Content\nSome Content\n  More Selectors div.main p { color:red; } div.main  p.blue { color: blue; }    Finally, we have many more complex selectors. This one here is a descendant selector   It addresses every p that is contained inside a div of class \u0026ldquo;main.\u0026rdquo;   More Selectors  div#cssmain p { color:red; } div#cssmain  p.blue { color: blue; }   regular (red) paragraph\nnot a regular paragraph (blue)     Selectors and the Cascade  Priority: inline \u0026rarr; id \u0026rarr; class \u0026rarr; element/tag fine gradations within this the awful !important rule     Color Values  Various representations:  ul#color-rules {font-size 1.5rem;} ul#color-rules li span.red {color: #FF0000} ul#color-rules li span.green {color: #00FF00} ul#color-rules li span.blue {color: #0000FF}   color: # 00 7F FF ;   color: rgb( 00, 127, 255 );   color: rgba( 00, 127, 255, 0.6);    (also hsl, hsla)  Fonts, colors and borders div.main { color: rgb(150,150,150); background-color: (#b0c4ee); text-align: center; text-decoration:underline; font-family: \"Times New Roman\", Times, Serif; font-style:italic; font-size:1.25em; border: 4px green solid; border-radius:20%; }    A lot of what we do with CSS is to set fonts and colors. Here are some examples: There are plenty of other properties that can be set, in much the same way.   Fonts and Colors in Action  div#maincss2 { color: rgb(150,150,150); background-color: (#b0c4ee); text-align: center; text-decoration:underline; font-family: \"Times New Roman\", Times, Serif; font-style:italic; font-size:1.25em; border: 4px green solid; border-radius:20%; }   here is a sample paragraph doing all of this stuff...\n   Sizes  p.fixed { font-size: 20px; background-color: gray; } p.em-small { font-size: 0.4em; background-color: blue; } p.em-big { font-size: 2.5em; background-color: red; } div.pixel-box { width: 50px; height: 50px; border: 1px solid black; } div.percent-box { width: 20%; height: 20px; border: 1px solid black; } div.viewport-box { width: 30vw; height: 30vh; border: 1px solid black; }  This paragraph will be syled differently from its peers\nThis paragraph will be syled differently from its peers\nThis paragraph will be syled differently from its peers\n        Sizes  p.fixed { font-size: 20px; background-color: gray; } p.em-small { font-size: 0.4em; background-color: blue; } p.em-big { font-size: 2.5em; background-color: red; } div.pixel-box { width: 50px; height: 50px; border: 1px solid black; } div.percent-box { width: 20%; height: 20px; border: 1px solid black; } div.viewport-box { width: 30vw; height: 30vh; border: 1px solid black; }  This paragraph will be syled differently from its peers\nThis paragraph will be syled differently from its peers\nThis paragraph will be syled differently from its peers\n      Simple Exercise  https://github.com/DigitalHistory/css-styling/        // Full list of configuration options available here: // https://github.com/hakimel/reveal.js#configuration Reveal.initialize({ controls: true, progress: true, history: true, center: false, slideNumber: 'c / t', rollingLinks: false, keyboard: true, overview: true, margin: 0.00, minScale: 0.90, maxScale: 1.00, theme: Reveal.getQueryHash().theme, // available themes are in /css/theme transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none transitionSpeed: 'default', multiplex: { secret: '', // null if client id: '', // id, obtained from socket.io server url: '' // Location of socket.io server }, // Optional libraries used to extend on reveal.js dependencies: [ {src: '../../vendor/reveal//plugin/klipse_reveal.js'}, { src: '../../vendor/reveal//lib/js/classList.js', condition: function() { return !document.body.classList; } }, { src: '../../vendor/reveal//plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }, { src: '../../vendor/reveal//plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } }, { src: '../../vendor/reveal//plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }] });    "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/slides/03-abundance-and-opennness/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " Abundance and Openness .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( 'link' ); link.rel = 'stylesheet'; link.type = 'text/css'; link.href = '../../vendor/reveal//css/print/pdf.css'; document.getElementsByTagName( 'head' )[0].appendChild( link ); }     War is Peace. Freedom is Slavery. Ignorance is Strength.    Recap  \u0026ldquo;Public sphere\u0026rdquo; at a turning point Transformation by automated agents and encoded text   Plan for the day  Brief lecture Discussion: how do you respond to information abundance? Break More about HTML/CSS (if you\u0026rsquo;re stuck/don\u0026rsquo;t understand)     History in the age of scarcity  The members of prehistoric societies did not think they lived in prehistoric times. They merely lacked a good preservation medium. (Auerbach, quoted in Rosenzweig)   lots was going on, lots of continuity, lots we will never know b/c oral preservation is terrible at outliving a cultural tradition    Scarcity  Historically, very little recorded Even less preserved historian\u0026rsquo;s task was to locate rare sources in faraway places   Implications  History skewed to those whose records appeared worth saving record always fragmentary  Historian free to fill in gaps  BUT: often possible to read large percentage of relevant sources     Age of Abundance  Tentative efforts are afoot to preserve our digital cultural heritage. If they succeed, historians will face a second, profound challenge–what would it be like to write history when faced by an essentially complete historical record? (Rosenzweig)   completely different situation than we used to have!    Abundance  much more recorded than in the past vastly more preserved, at least for now increasing percentage of historical works as well   Mechanical Speech  auto-preservation but by and for whom?   Google, FB, and Twitter are preserving lots of data. As are Tesla and Samsung. But who wil lget to see it? How does a historian compete?   Problems of Preservation  physical media software turnover \u0026amp; bitrot capturing dynamic/interactive media     What big data means for old documents  digitization does provide scale (or quantity) but does so at the price of rich, largely manual encoding. Visualization, customization, personalization, and similar analytical services increasingly familiar to us depend upon born-digital objects in which a great deal of structural and semantic knowledge has been encoded. The information captured on page images is, by contrast, implicit and often not directly accessible to the machines that will be always their first, often their only, and arguably their most important readers. (CILR)   Can we tell stories? Can we do research?  no longer possible to read everything!  who will read it for us? How will we be experts? Can we automate our reading?  Narrative form ill-suited to massive quantities of data  can we develop new types of narratives?  Big questions may be answerable!  What used to be pure speculation, can perhaps now be made more concrete and compelling  How does role of religion in public discourse change over time? how do railroads impact social and economic development? others?       The Preservation Challenge    and this      and this too    Remind you of anything?  The Party said that Oceania had never been in alliance with Eurasia. He, Winston Smith, knew that Oceania had been in alliance with Eurasia as short a time as four years ago. But where did that knowledge exist? Only in his own consciousness, which in any case must soon be annihilated. And if all others accepted the lie which the Party imposed -if all records told the same tale \u0026#x2013; then the lie passed into history and became truth. \u0026rsquo;Who controls the past,\u0026rsquo; ran the Party slogan, \u0026rsquo;controls the future: who controls the present controls the past.\u0026rsquo; And yet the past, though of its nature alterable, never had been altered. Whatever was true now was true from everlasting to everlasting. It was quite simple. All that was needed was an unending series of victories over your own memory. \u0026rsquo;Reality control\u0026rsquo;, they called it: in Newspeak, \u0026rsquo;doublethink\u0026rsquo;.   Remind you of anything?  Winston sank his arms to his sides and slowly refilled his lungs with air. His mind slid away into the labyrinthine world of doublethink. To know and not to know, to be conscious of complete truthfulness while telling carefully constructed lies, to hold simultaneously two opinions which cancelled out, knowing them to be contradictory and believing in both of them, to use logic against logic, to repudiate morality while laying claim to it, to believe that democracy was impossible and that the Party was the guardian of democracy, to forget whatever it was necessary to forget, then to draw it back into memory again at the moment when it was needed, and then promptly to forget it again: and above all, to apply the same process to the process itself. That was the ultimate subtlety: consciously to induce unconsciousness, and then, once again, to become unconscious of the act of hypnosis you had just performed. Even to understand the word \u0026rsquo;doublethink\u0026rsquo; involved the use of doublethink.   Everything.gov  Archive Everything Write the query tools \u0026ldquo;genome project\u0026rdquo; for government data     Openness  \u0026#x2026;ideas that were more-or-less serviceable in the world before networked computers–ideas about value, property rights, communication, creativity, intelligence, governance and many other aspects of society and culture–are now up for debate. The emergence of new rights regimes (such as open access, open content and open source) and the explosion of new information are manifestations of these changing costs. (Turkel)   Ideals of openness  rooted in Enlightenment       at the foundation of scholarship yet, not manifest in our scholarly journals \u0026amp; publishing regimes   Jefferson on Freedom of Information  It would be curious then, if an idea, the fugitive fermentation of an individual brain, could, of natural right, be claimed in exclusive and stable property. If nature has made any one thing less susceptible than all others of exclusive property, it is the action of the thinking power called an idea, which an individual may exclusively possess as long as he keeps it to himself; but the moment it is divulged, it forces itself into the possession of every one, and the receiver cannot dispossess himself of it. Its peculiar character, too, is that no one possesses the less, because every other possesses the whole of it. He who receives an idea from me, receives instruction himself without lessening mine; as he who lights his taper at mine, receives light without darkening me. That ideas should freely spread from one to another over the globe, for the moral and mutual instruction of man, and improvement of his condition, seems to have been peculiarly and benevolently designed by nature, when she made them, like fire, expansible over all space, without lessening their density in any point, and like the air in which we breathe, move, and have our physical being, incapable of confinement or exclusive appropriation. Inventions then cannot, in nature, be a subject of property.   the web as open space  Origins of Web wrapped up in ideologies of Freedom   \u0026ldquo;Information wants to be free - because it is now so easy to copy and distribute casually - and information wants to be expensive - because in an Information Age, nothing is so valuable as the right information at the right time. (Brand, ca. 1984)  When information is generally useful, redistributing it makes humanity wealthier no matter who is distributing and no matter who is receiving. (Stallman, ~1990, quoted by Dening)   but different freedoms compete \u0026ldquo;walled gardens\u0026rdquo; vs open access Struggles only intensifying, with battle lines not quite stable  net neutrality the Facebook problem Digital Public Library of America archive.org      Summary  Information Abundance comes with many challenges Preservation Interpretation Access   Future of the web and of historical scholarship depends on continued struggle over these contested values.    And Now: CSS!  HTML for structure/content; CSS for presentation Resources: Codeacademy CSS offerings; Learn Layout; Mozilla Developer Network; many other cool sites   CSS Basics  \u0026ldquo;Cascading Style Sheets\u0026rdquo; Style sheet that \u0026ldquo;cascades\u0026rdquo; = overwrites prior values web pages link to stylesheets, as many as desired   With and without CSS      CSS Selectors h1 { color:blue; font-family:serif; font-size:24px; } div { border: 1px solid black; } div.main p { color:red; } #specialid { float:left; }    When you look at a CSS file, you will see it is divided into a bunch of stanzas, like this. Each of these stanzas is called a \u0026ldquo;selector statement\u0026rdquo;: They all follow the same pattern:  first, a selector that identifies the elements to which these instructions will apply then an open brace \u0026ldquo;{\u0026rdquo; which marks the start of the actual instructions then a series of property-value pairs. Each of these sets the value of a particular property (duh). Note that at the end of a property, there is always a semi-colon! finally, a closing brace that ends the selector declaration.    Selector types \u0026amp;lt;style\u0026amp;gt; body {background-color: grey;} h1 { font-size: 3em; color: red; } p { font-size:5em} .coolpara { color:green; } #myfave { color:yellow; background-color: black; } \u0026amp;lt;/style\u0026amp;gt; \u0026amp;lt;h1\u0026amp;gt; Heading\u0026amp;lt;/h1\u0026amp;gt; \u0026amp;lt;p class=\"coolpara\"\u0026amp;gt;Some Content\u0026amp;lt;/p\u0026amp;gt; \u0026amp;lt;p id=\"myfave\"\u0026amp;gt;Some Content\u0026amp;lt;/p\u0026amp;gt;   .CodeMirror { font-size: 2em; }   window.klipse_settings = { selector_eval_html: \".klipse\" };   '   Though simple in principle, CSS selectors can be confusing. Here are some basic selector types:  Element selectors: these just give the element (like h1, p, div, span, etc.). they apply to all elements of this type. Class selectors: these give the name of a class attribute that an HTML element may have. This selector will always begin with a period (\u0026ldquo;.\u0026rdquo;). So for instance: ID selector: this addresses the element with a particular ID:    More Selectors div.main p { color:red; }    Finally, we have many more complex selectors. This one here is a descendant selector   It addresses every p that is contained inside a div of class \u0026ldquo;main.\u0026rdquo;   Descendant Selector \u0026amp;lt;style\u0026amp;gt; div.main p { color:red; } \u0026amp;lt;/style\u0026amp;gt; \u0026amp;lt;p\u0026amp;gt; regular paragraph\u0026amp;lt;/p\u0026amp;gt; \u0026amp;lt;div class=\"main\"\u0026amp;gt; \u0026amp;lt;p\u0026amp;gt; not a regular paragraph \u0026amp;lt;/p\u0026amp;gt; \u0026amp;lt;/div\u0026amp;gt;   .CodeMirror { font-size: 2em; }   window.klipse_settings = { selector_eval_html: \".klipse\" };   '   Fonts, colors and borders div.main { color: rgb(150,150,150); background-color: (#b0c4ee); text-align: center; text-decoration:underline; font-family: \"Times New Roman\", Times, Serif; font-style:italic; font-size:1.25em; border: 4px green solid; border-radius:20%; }    A lot of what we do with CSS is to set fonts and colors. Here are some examples: There are plenty of other properties that can be set, in much the same way.   Fonts and Colors in Action \u0026amp;lt;style\u0026amp;gt; div.main { color: rgb(150,150,150); background-color: (#b0c4ee); text-align: center; text-decoration:underline; font-family: \"Times New Roman\", Times, Serif; font-style:italic; font-size:1.25em; border: 4px green solid; border-radius:20%; } \u0026amp;lt;/style\u0026amp;gt; \u0026amp;lt;div class=\"main\"\u0026amp;gt; \u0026amp;lt;p\u0026amp;gt; here is a sample paragraph doing all of this stuff...\u0026amp;lt;/pP   .CodeMirror { font-size: 2em; }   window.klipse_settings = { selector_eval_html: \".klipse\" };   '   Box Model  One important notion to understand in CSS is the so-called \u0026ldquo;Box Model\u0026rdquo;, which accounts for the distribution of whitespace around elements. A lot of the grief you will encounter when designing websites will come back to the box model, so it\u0026rsquo;s important to learn it:    Padding\u0026rsquo;s Effects \u0026amp;lt;style\u0026amp;gt; .simple { width: 500px; height: 50px; background-color: black; margin: 20px auto; border: 10px blue solid; } .fancy { width: 500px; height: 50px; padding: 50px; background-color: black; //background-clip: content-box; margin: 20px auto; border: 10px blue solid; } \u0026amp;lt;/style\u0026amp;gt; \u0026amp;lt;div class=\"simple\"\u0026amp;gt;\u0026amp;lt;/div\u0026amp;gt; \u0026amp;lt;div class=\"fancy\"\u0026amp;gt;\u0026amp;lt;/div\u0026amp;gt;   .CodeMirror { font-size: 2em; }   window.klipse_settings = { selector_eval_html: \".klipse\" };   '   \u0026lt;div class=\"fancy\"\u0026gt; will look a lot bigger than \u0026lt;div class=\"simple\"\u0026gt;, even though they are nominally the same size!  There are two ways to deal with this:  subtract the size of the padding and border from your width values use the new \u0026ldquo;box-sizing:border-box\u0026rdquo; attribute. This will do all the math for you.    Box-sizing Border-box \u0026amp;lt;style\u0026amp;gt; .simple { width: 500px; height: 50px; //background-color: black; //background-clip: content-box; margin: 20px auto; border: 10px blue solid; } .fancy { width: 500px; height: 50px; padding: 50px; background-color: black; //background-clip: content-box; margin: 20px auto; border: 10px blue solid; } div {box-sizing: border-box;} \u0026amp;lt;/style\u0026amp;gt; \u0026amp;lt;div class=\"simple\"\u0026amp;gt;\u0026amp;lt;/div\u0026amp;gt; \u0026amp;lt;div class=\"fancy\"\u0026amp;gt;\u0026amp;lt;/div\u0026amp;gt;   .CodeMirror { font-size: 2em; }   window.klipse_settings = { selector_eval_html: \".klipse\" };   '   \u0026lt;div class=\"fancy\"\u0026gt; will look a lot bigger than \u0026lt;div class=\"simple\"\u0026gt;, even though they are nominally the same size!  There are two ways to deal with this:  subtract the size of the padding and border from your width values use the new \u0026ldquo;box-sizing:border-box\u0026rdquo; attribute. This will do all the math for you.    Positioning  This is a difficult subject. When you are dealing with lots of different screen sizes and resolutions, and different devices with different fonts installed, etc., it is not trivial to position every element precisely where you want it. You will find a lot of your teeth-gnashing time is spent trying to get various columns of content to line up pretty, center themselves, etc.  The CSS \u0026ldquo;position\u0026rdquo; property has four possible values, whose names are impossible to remember and anyway don\u0026rsquo;t make sense. The four most important are: .static { position: static; } .relative1 { position: relative; } .relative2 { position: relative; top: -20px; left: 20px; background-color: white; width: 500px; } .fixed { position: fixed; bottom: 0; right: 0; width: 200px; background-color: white; } .absolute { position: absolute; top: 120px; right: 0; width: 300px; height: 200px; }    Static positioning is the default. A statically-positioned element is said to be \u0026ldquo;unpositioned\u0026rdquo;. Relatively positioned elements are displaced relative to the position they \u0026ldquo;ought\u0026rdquo; to be occupying (according to the defaults). But meanwhile, the space it \u0026ldquo;ought\u0026rdquo; to be occupying is still considered \u0026ldquo;taken\u0026rdquo; by the browser, which won\u0026rsquo;t put anything else in that space unless you force it to do so. fixed elements have their position fixed to a spot on the screen (which is called \u0026ldquo;the viewport\u0026rdquo; in CSS talk). This is great when you want a fixed header or footer. absolutely-positioned elements are like fixed elements, only they\u0026rsquo;re positioned relative to the closest positioned ancestor, usually an element with a position property value of \u0026ldquo;relative\u0026rdquo;.   Understanding this well involves fiddling a lot with code; rather than make a bunch of fiddly exercies myself, I\u0026rsquo;ll direct you the codeacademy positioning exercies, which have a great help system that makes things a little easier.  Positioning 2: Float  So, that\u0026rsquo;s one way to position elements. Another is to use the float property, which imagines the page flowing like water. The element will \u0026ldquo;float\u0026rdquo; left or right, and everything else will flow around it. To stop the flowing \u0026#x2013; that is, to require the next element to appear below a floated element \u0026#x2013; that next element will need to apply the clear property, which stops the float.  Let\u0026rsquo;s play around with this briefly in JSBin.  Changes Comin\u0026rsquo; Round Real Soon  All of what you just learned is in the process of changing dramatically. A new CSS module, flexbox, makes a lot of this stuff much easier, but takes some practice to understand.  Here is a very quick introduction to flexbox. You may want to look at this cheatsheet, this slightly more verbose one, or this very detailed specification. Meanwhile, there are lots of other new CSS features coming along, which will be supported by more and more browsers as we move forwards. They are pretty fun; if you want, you can check out transitions and learn a little bit about animations.  Exercise  Let\u0026rsquo;s do a Habermas exercise  Here\u0026rsquo;s the repo, for working in Atom \u0026#x2026;and her it is on JSBin         // Full list of configuration options available here: // https://github.com/hakimel/reveal.js#configuration Reveal.initialize({ controls: true, progress: true, history: true, center: false, slideNumber: 'c', rollingLinks: false, keyboard: true, overview: true, margin: 0.10, maxScale: 1.00, theme: Reveal.getQueryHash().theme, // available themes are in /css/theme transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none transitionSpeed: 'default', multiplex: { secret: '', // null if client id: '', // id, obtained from socket.io server url: '' // Location of socket.io server }, // Optional libraries used to extend on reveal.js dependencies: [ {src: '../../vendor/reveal//plugin/klipse_reveal.js'}, { src: '../../vendor/reveal//lib/js/classList.js', condition: function() { return !document.body.classList; } }, { src: '../../vendor/reveal//plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }, { src: '../../vendor/reveal//plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } }, { src: '../../vendor/reveal//plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }] });    "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/slides/04-01-css-layout/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " CSS Part 2: Layout .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( 'link' ); link.rel = 'stylesheet'; link.type = 'text/css'; link.href = '../../vendor/reveal//css/print/pdf.css'; document.getElementsByTagName( 'head' )[0].appendChild( link ); }     Recap  selector syntax: selector \u0026gt; string {property: value;} colors: #RRGGBB or rgba(RRR, BBB, GGG, 0.alpha) sizes: px or em (or rem)     Today  intro to layout follow along with the repo: https://github.com/DigitalHistory/css-layout     Box Model    content padding border margin     \u0026ldquo;Russian Dolls\u0026rdquo;    Display: Block vs. Inline    block elements have their own boxes inline elements do not have boxes. height, width, padding, work inconsistently. inline-block elements don\u0026rsquo;t make \u0026ldquo;true\u0026rdquo; boxes but allow you to set height and width.   by default, these elements are inline:  a, b, i, strong, em, span, img   while these are block:  div, article, section, nav, hx, p, ul, ol, li, main, header, footer      Normal Flow  page processed sequentially each block-level element gets its own line inline elements displayed inside those lines heights of lines set by height of content     Layout: Overriding \u0026ldquo;normal\u0026rdquo; flows  instruct elements to either step out of the normal flow or set new rues for their \u0026ldquo;internal\u0026rdquo; or \u0026ldquo;external\u0026rdquo; flow     Layout Methods  display property position property float property   We focus on display but dip into the other methods    Display  values we care about:  display: none display: block/inline/inline-block display: flex display: grid     Follow Along  I\u0026rsquo;ll be using dev tools to quickly change css properties do the same if you wish! https://github.com/DigitalHistory/css-layout     Display: None  hide element completely so that it takes up no space at all    Display: Flex  one-dimensional layout \u0026ldquo;content-out\u0026rdquo;  container determines direction \u0026amp; a few defaults most styling still in children  revolutionary!   Flex Concepts: Container and Items  the container has display: flex; the items are direct children of the container container controls direction and wrapping behaviour, as well as default box alignments; items control most other properties   Flex Concepts: Direction (container!)    main axis: horizontal if flex-direction: column; vertical if flex-direction: row cross axis: vertical if flex-direction: column; horizontal if flex-direction: row   Flex Concepts: Alignment, Justification (container and items!)  align-items: default cross-axis alignment (stretch, flex-start, flex-end) justify-content: default main-axis alignment (flex-start, flex-end, space-around, space-between) align-self: item cross-axis order: placement in flex-container (relative, not absolute!!)     Display: Grid  two-dimensional layout \u0026ldquo;container-in\u0026rdquo;  container determines almost all layout properties children choose their position within the grid  revolutionary!   A lot like flex!  many ideas come from flex finer control 2 dimensions, not one   Grid Concepts: Container and Items  as in flex   Grid Concepts: Templates and Areas (container)  set patterns for the 2-d grid grid-template-columns: how many columns, and what size? grid-template-rows: how many rows, and what size? grid-template-areas: names the areas, and allows items to set their own areas   Placing Items  grid-column: n/m: place items by column-number grid-row: n/m: place items by row-number  (note how these allow spanning)  grid-area: area-name: place by named area  does not allow spanning      Media Queries  CSS rules that only come into effect under certain conditions we will only use for screen size allows creation of responsive sites  @media screen and (min-width: 500px;) { normal.selector  here { normal-rule: normal-value; } } @media screen and (max-width: 499px) { normal.selector  here { normal-rule: normal-value; } }          // Full list of configuration options available here: // https://github.com/hakimel/reveal.js#configuration Reveal.initialize({ controls: true, progress: true, history: true, center: false, slideNumber: 'c / t', rollingLinks: false, keyboard: true, overview: true, margin: 0.10, maxScale: 1.00, theme: Reveal.getQueryHash().theme, // available themes are in /css/theme transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none transitionSpeed: 'default', multiplex: { secret: '', // null if client id: '', // id, obtained from socket.io server url: '' // Location of socket.io server }, // Optional libraries used to extend on reveal.js dependencies: [ {src: '../../vendor/reveal//plugin/klipse_reveal.js'}, { src: '../../vendor/reveal//lib/js/classList.js', condition: function() { return !document.body.classList; } }, { src: '../../vendor/reveal//plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }, { src: '../../vendor/reveal//plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } }, { src: '../../vendor/reveal//plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }] });    "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/slides/04-distant-reading-1/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " Distant Reading I .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( 'link' ); link.rel = 'stylesheet'; link.type = 'text/css'; link.href = '../../vendor/reveal//css/print/pdf.css'; document.getElementsByTagName( 'head' )[0].appendChild( link ); }     Reminder  \u0026ldquo;Abundance\u0026rdquo; offers many challenges  preservation interpretation access  Does history itself need to be reformed?  What relation to sources? What kinds of arguments? What narrative forms?  missed the \u0026ldquo;openness\u0026rdquo; section   Plan for the day  Lecture (short as i can manage, will stop early if nec) Class Discussion (what did you learn/ what do you doubt) help w/ HTML/CSS/JS (if you\u0026rsquo;re stuck/don\u0026rsquo;t understand)     Abstract Models  \u0026#x2026;distance is however not an obstacle, but a specific form of knowledge: fewer elements, hence a sharper sense of their overall interconnection. Shapes, relations, structures. Forms. Models.   The opposite of close?  Dorothea, endowed with the extraordinary capacity for attentiveness that is “ardor,” is given to the strongest denunciations of the trivial, the most overwhelming anxieties of admitting the trivial into her life of any character in the novel. She is blind to the possibility that attention has the capacity to reveal that what seems trivial is in fact significant. She fears instead that the attention is wasted by devoting itself to those common objects which really are trivial, which have no redeeming significance:  \u0026ldquo;“I should learn everything then,” she said to herself, still walking quickly along the bridle road through the wood. “It would be my duty to study that I might help him the better in his great works. There would be nothing trivial about our lives. Everyday-things with us would mean the greatest things.\u0026rdquo;   to notice:  analysis of passage longer than passage itself.    To the point of deconstruction  If the pharmakon is ‘ambivalent,’ it is because it constitutes the medium in which opposites are opposed, the movement and the play that links them among themselves, reverses them or makes one side cross over into the other (soul/ body, good/ evil, inside/ outside, memory/ forgetfulness, speech/ writing, etc.).…The pharmakon is the movement, the locus, and the play: (the production of) difference. It is the différance of difference. It holds in reserve, in its undecided shadow and vigil, the opposites and the differends that the process of discrimination will come to carve out. Contradictions and pairs of opposites are lifted from the bottom of this diacritical, differing, deferring, reserve. Already inhabited by différance, this reserve, even though it ‘precedes’ the opposition between different effects, even though it preexists differences as effects, does not have the punctual simplicity of a coincidentia oppositorum. It is from this fund that dialectics draws its reserves.   Closeness  Literary study long organized around \u0026ldquo;close\u0026rdquo; reading \u0026ldquo;Hermeneutic\u0026rdquo; model of scholarship defines what it has meant to understand or master a text   Questioning Close Reading  But what is understanding? what is literature? what is the scholar\u0026rsquo;s goal?     Some Numbers  ~62,000 new Novels published in English in the US/year ~304,000 new and re-issued books in US/year ~129,000,000 books collected in world\u0026rsquo;s libraries   not possible to read these  can one still be an expert?    New forms of Understanding?  instead of, or in parallel with, close reading? apprehension of large-scale phenomena studying models, rather than texts themselves   Questions to consider  Does this count as comprehension? what new skills are required? What are the weaknesses of this form?     Graphs   condense data conceptualize mathematically convince readers a fundamentally rhetorical tool   Moretti\u0026rsquo;s Graphs    Quantitative research provides a type of data which is ideally independent of interpretations. (p.9)   yet, the graph is an argument: rise, fall, rise   A History of Readers    each phase a new \u0026ldquo;kind\u0026rdquo; of reader intensive, extensive, generic   Cycles  Event, cycle, longue durée: three time frames which have fared very unevenly in literary studies.  \u0026#x2026; cycles constitute temporary structures within the historical flow. (p.14)   event \u0026rarr; close reading longue durée \u0026rarr; grand narrative cycle \u0026rarr; ?   Cycles in Literature    A genre exhausts its potentialities\u0026#x2026; when its inner form is no longer capable of representing the most significant aspects of contemporary reality. (p. 17, fn 7)   Genre \u0026amp; Generation  \u0026#x2026; some kind of generational mechanism seems the best way to account for the regularity of the novelistic cycle\u0026#x2026; (p. 22)   \u0026ldquo;Normal literature\u0026rdquo; but \u0026ldquo;revolution\u0026rdquo; as \u0026ldquo;dying out\u0026rdquo;   From \u0026ldquo;the shift\u0026rdquo; to \u0026ldquo;a shift\u0026rdquo;    \u0026#x2026;the point is not who prevails in this or that skirmish, but exactly the opposite: no victory is ever definitive\u0026#x2026; the form keeps oscillating back and forth between the two groups. (p.29)   Moretti\u0026rsquo;s method  \u0026#x2026;the real point here\u0026#x2026; is the total heterogeneity of problem and solution: to make sense of quantitative data, I had to abandon the quantitative universe, and turn to morphology: evoke form, in order to explain figures.   how justified is this move? what do we learn from it?     Maps  There is a very simple question about literary maps: what exactly do they do?   like graphs, maps are a persuasive tool What does it mean to \u0026ldquo;map\u0026rdquo; a novel?   What is a map?        What is a map?  abstract visual representation of a physical or imagined space   Moretti\u0026rsquo;s method      The form of an object is a \u0026rsquo;diagram of forces\u0026rsquo;, in this sense, at least that from it we can\u0026#x2026; deduce the forces that \u0026#x2026; have acted upon it. (p.57)   Our Village  In the 1824 volume\u0026#x2026; the vilage was the undisputed centre of the surrounding countryside: the centripetal effects of the force \u0026ldquo;from within\u0026rdquo; were omnipresent, while the force \u0026ldquo;from without\u0026rdquo; was nowhere to be seen. (p. 57)  Two collections later, in 1828, the village\u0026rsquo;s gravitation field is already weaker\u0026#x2026; Something is wrong with the force from within, but as no counter-force challenges it yet, the basic pattern\u0026#x2026; remains in place. But by 1832\u0026#x2026; the village\u0026rsquo;s centripetal force is reduced to nothing, and the bulk of the book moves away\u0026#x2026; (p. 58-59)   Our Village \u0026#x2013; Extremes      Modelling the text  reduce text to the model presume that sociological factors are determinative sustain focus on form (\u0026ldquo;a quantitative history of literature is also a profoundly formalist one\u0026rdquo; -p.25, fn 14) interpret model in light of theories     Summary: Moretti and History  labor-intensive quantification of sources glossing over problems of quantification continued reliance on expert opinion \u0026#x2013; but how is that expertise to be cultivated?         // Full list of configuration options available here: // https://github.com/hakimel/reveal.js#configuration Reveal.initialize({ controls: true, progress: true, history: true, center: false, slideNumber: 'c / t', rollingLinks: false, keyboard: true, overview: true, margin: 0.10, maxScale: 1.00, theme: Reveal.getQueryHash().theme, // available themes are in /css/theme transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none transitionSpeed: 'default', multiplex: { secret: '', // null if client id: '', // id, obtained from socket.io server url: '' // Location of socket.io server }, // Optional libraries used to extend on reveal.js dependencies: [ {src: '../../vendor/reveal//plugin/klipse_reveal.js'}, { src: '../../vendor/reveal//lib/js/classList.js', condition: function() { return !document.body.classList; } }, { src: '../../vendor/reveal//plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }, { src: '../../vendor/reveal//plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } }, { src: '../../vendor/reveal//plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }] });    "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/slides/05-01-js/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " Getting Started With Javascript .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( 'link' ); link.rel = 'stylesheet'; link.type = 'text/css'; link.href = '../../vendor/reveal//css/print/pdf.css'; document.getElementsByTagName( 'head' )[0].appendChild( link ); }     JavaScript  a real language! dynamic transformation baby steps!!     Some Big Ideas  Abstraction Formalization Repetition Laziness!     Assignment 1 will require  Basic Syntax Variable Types Function Definitions Loops and Branches Basic \u0026ldquo;Objects\u0026rdquo;     Running Javascript  in Browser Console in terminal (with the command node) in VSCode files, with Quokka attached     What is a Variable?  name for memory location to be used later, usually in specific ways that depend on type or, box into which you can put information that you will want to get later.     Declaring Variables const neverChange = \"Project Key\"; // comment let oftenChanges = 0; // maybe we will change this value later var oldDeclaration = 0; // we try to avoid using var now; use let instead   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   Text is Data let first=\"Matt\"; let last=\"Price\" console.log(first + last);   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '  Do it w/ your name!  console; syntax; spaces; exercise:    \u0026ldquo;Dynamic\u0026rdquo; (or \u0026ldquo;Weak\u0026rdquo;) Typing  numbers and strings are different but we can convert number \u0026rarr; string  let n = 1, m=2, s=\"Hello, there! \"; console.log(m+n); console.log(s+n);   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   commas, semi-colons; \u0026ldquo;overloading\u0026rdquo; \u0026amp;dynamic typing this can be confusing!!!    Some Variable Types  numbers strings boolean (true/false) arrays objects   Making Lists (Arrays) let historians= [\"Edward Gibbon\", \"Leopold von Ranke\", \"Edward Said\", \"Joan Scott\"]; for (h of historians) { console.log(h); }   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   brackets!   Working With Arrays a = []; a.push(\"Edward Gibbon\"); a.push(\"Edward Said\"); a.push(\"Joan Scott\"); console.log(a[1]); a.pop(); // a   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   push, pop, INDEX    Working with Numbers wardates=[1776, 1792, 1812, 1861, 1870, 1914, 1939, 1994] console.log(\"The time between The First and \\ Second World Wars was \" + (wardates[6] - wardates[5]) + \" years\");   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '     Repetition: While Loops let historians= [\"Edward Gibbon\", \"Leopold von Ranke\", \"Edward Said\", \"Joan Scott\"]; let i = 0; while (i   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   repeat inside the { ... } as long as test is true:  initial value: i = 0 test (halt condition): i \u0026lt; historians.length change in condition: i += 1     Repetition: For Loops let historians= [\"Edward Gibbon\", \"Leopold von Ranke\", \"Edward Said\", \"Joan Scott\"]; for (let i=0; i   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   initial value: i = 0 test (halt condition): i \u0026lt; historians.length change in condition: i++ (idiomatic)     Repetition: other for loops let historians= [\"Edward Gibbon\", \"Leopold von Ranke\", \"Edward Said\", \"Joan Scott\"]; for (i in historians) { console.log(historians[i] + \" was a historian.\"); } for (h of historians) { console.log(h + \" was a historian.\"); }   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   these also \u0026ldquo;loop\u0026rdquo; but the initial value, test, and increment are implicit defined by historians, but in slightly different ways. they are very convenient! read about them.     Conditionals: If let historians= [\"Edward Gibbon\", \"Leopold von Ranke\", \"Edward Said\", \"Joan Scott\"]; let i = 0; while (i   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   execute the { ... } only if the test is true here the test is historians[i] === \"Joan Scott\" note the many === \u0026#x2013; different feom just one =   Branching let historians= [\"Edward Gibbon\", \"Leopold von Ranke\", \"Edward Said\", \"Joan Scott\"]; let i = 0; while (i   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '     Parts of things: elements, methods, properties let a=[\"name\", 0, \"otherinfo\"]; console.log(a[2]); console.log(a.length); console.log(a[length]); a.pop;   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   note strange syntax:  a[1]: second element of array a.length: a special way of finding the length of any array. Length is a property of a.  console.log(a)): log is a part of console. it takes a parameter , in this case a     Doing Stuff: functions  A Function is a variable(!)  functions are also a box into which you put stuff but when you look into the box, the \u0026ldquo;stuff\u0026rdquo; has changed we use them to change the state: to do things use whenever you\u0026rsquo;re repeating an action or process   compare:  let fruit=\"orange\"; eat(\"orange\")   Defining a function function square(number) { return number * number; } let cube = function(number) { return number * number * number; }; console.log(square(2)); console.log(cube(3));   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   we\u0026rsquo;ll use the first method:  keyword function followed by name then (parameters, if, you, need, them), then { , then statements, then }    name parameters definition return value    Remember this let historians= [\"Edward Gibbon\", \"Leopold von Ranke\", \"Edward Said\", \"Joan Scott\"]; let i = 0; while (i   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   As a function function makeSentences(historians) { let i = 0, output = \"\"; while (i   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   Finally we can talk about scope! let a = \"just some string\", b = \"some other string\"; function scopeExample (anyString) { let a = \"I set this value inside the function\"; return (\"inside the function, a=\" + a + \", not \" + anyString); } a // scopeExample(a); //anyString   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   outside the function, a = \u0026ldquo;just some string\u0026rdquo; inside, we redeclare it for the function scope and now a has new value anyString is only declared inside the function scope   Advanced scope let a = \"global scope a\"; console.log(a); for (i=0; i  .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   we can also redeclare let variables in an if/for/while \u0026ldquo;block\u0026rdquo; scope scales: global \u0026rarr; function \u0026rarr; block \u0026rarr; nested block \u0026rarr; etc etc any time you see { .. } you\u0026rsquo;re in a new scope context!   Function Hints for Assignments  remember the return values!  debug by setting a variable to the function output, and using quokka to look at the value: function returnArray (first, second, third) { // you can define the array using \"new Array ()\" or just \"[ , , ]\" // don\u0026#39;t forget to return it // return ; // add the falue here! } let a = returnArray (1, 3,5); a // quokka will display the value   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '      Objects and Properties  Objects are variables with named parts  parts are called properties, but if a part is a function, we call that part a method   let\u0026rsquo;s eat let myFruit=\"orange\", mySandwich = \"just some bread!\", myBar=\"weird vegan bar\", myCookie=\"ginger\", myCandy=\"pulparindo\", mySnacks=[\"cliff bar\", \"cliff bar\", \"kind bar\"]; function eat (food) { console.log(\"Umm, that was a delicious \" + food + \".\"); } eat (myFruit);   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   we can eat any of the foods they\u0026rsquo;re not related to each other, just floating around   Now let\u0026rsquo;s make lunch let myFruit=\"orange\", mySandwich = \"just some bread!\", myBar=\"weird vegan bar\", myCookie=\"ginger\", myCandy=\"pulparindo\", mySnacks=[\"cliff bar\", \"cliff bar\", \"kind bar\"]; let myLunch = {};   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   myLunch is an empty object \u0026#x2013; it has no parts yet   Add some parts let myFruit=\"orange\", mySandwich = \"just some bread!\", myBar=\"weird vegan bar\", myCookie=\"ginger\", myCandy=\"pulparindo\", mySnacks=[\"cliff bar\", \"cliff bar\", \"kind bar\"]; let myLunch = { fruit: \"orange\", sandwich: mySandwich }; myLunch[\"snacks\"]=mySnacks; myLunch;   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   added parts in 3 ways: set directly in definition; set by reference in definition; added by reference after definition   Eat the Lunch let myFruit=\"orange\", mySandwich = \"just some bread!\", myBar=\"weird vegan bar\", myCookie=\"ginger\", myCandy=\"pulparindo\", mySnacks=[\"cliff bar\", \"cliff bar\", \"kind bar\"]; let myLunch = { fruit: \"orange\", sandwich: mySandwich }; myLunch[\"snacks\"]=mySnacks; function eatLunch (someLunch) { let output = \"\"; output += \"I\u0026#39;ll start with my \" + someLunch[\"fruit\"] + \"\\n\"; output += \"Next I want to eat \" + someLunch.sandwich + \"\\n\"; for (snack of someLunch.snacks) { output += \" I love my \" + snack + \"\\n\"; } return output; } eatLunch(myLunch);   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   rewrote eat to take advantage of the structure of lunch   Add Dessert let myLunch = { fruit: \"orange\", sandwich: \"just some bred!\", bar: \"weird vegan bar\", snacks: [\"cliff bar\", \"cliff bar\", \"kind bar\"], dessert: {cookie: \"ginger\", candy: \"pulparindo\"} }; console.log(\"I\u0026#39;m finally ready for my \" + myLunch.dessert.cookie);   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   objects can be arbitrarily complex and contain other objects   Eat The Lunch as a Method  Reminder function eatLunch (someLunch) { let output = \"\"; output += \"I\u0026#39;ll start with my \" + someLunch[\"fruit\"] + \"\\n\"; output += \"Next I want to eat \" + someLunch.sandwich + \"\\n\"; for (snack of someLunch.snacks) { output += \" I love my \" + snack + \"\\n\"; } return output; }   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   Writing the Method let myLunch = { fruit: \"orange\", sandwich: \"just some bred!\", bar: \"weird vegan bar\", snacks: [\"cliff bar\", \"cliff bar\", \"kind bar\"], dessert: {cookie: \"ginger\", candy: \"pulparindo\"}, eatMe: function() { let output = \"\"; output += \"I\u0026#39;ll start with my \" + this[\"fruit\"] + \"\\n\"; output += \"Next I want to eat \" + this.sandwich + \"\\n\"; for (snack of this.snacks) { output += \" I love my \" + snack + \"\\n\"; } return output; } }; myLunch.eatMe; myLunch.eatMe();   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   note the differences between eat() and myLunch.eatMe:  the method doesn\u0026rsquo;t take a parameter! instead, we get to use this, which refers to the current object scope    Finally some History let greatWar = { name: \"The First World War\", start: 1914, end: 1918, badGuys: [\"Germany\", \"Austria-Hungary\", \"Ottoman Empire\"], goodGuys: [\"All our Friends\"], scale: \"Catastrophe\" } // console.log(greatWar[\"name\"] + \" lasted for \" + // (greatWar.end - greatWar.start) + \" years.\");   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   more objects let greatWar = { name: \"The First World War\", start: 1914, end: 1918, badGuys: [\"Germany\", \"Austria-Hungary\", \"Ottoman Empire\"], goodGuys: [\"All our Friends\"], scale: \"Catastrophe\", battles: [ { name: \"The Battle of Vimy Ridge\", year: 1915, casualties: 34000 }] } console.log(greatWar[\"name\"] + \" lasted for \" + (greatWar.end - greatWar.start) + \" \\ years.\"); console.log(greatWar.battles[0].name + \" was ferocious and horrific. There were \" + \\ greatWar.battles[0].casualties + \" casualties.\");   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   Basic Logic with Objects let goodGuys = [\"CA\", \"UK\", \"US\"]; let badGuys=[\"DE\", \"AH\"]; let people = [ {name: \"Kaiser Wilhelm\", nat: \"DE\"}, {name:\"Winston Churchill\", nat: \"UK\"}]; for (person of people) { if (badGuys.includes(person.nat)) { //console.log(person.name + \": BOOOOOOOOOOOO!!!\"); } };   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   Branching Logic with Objects let goodGuys = [\"CA\", \"UK\", \"US\"]; let badGuys=[\"DE\", \"AH\"]; let people = [ {name: \"Kaiser Wilhelm\", nat: \"DE\"}, {name:\"Winston Churchill\", nat: \"UK\"}]; for (person of people) { if (badGuys.includes(person.nat)) { console.log(person.name + \": BOOOOOOOOOOOO!!!\"); } else { console.log(person.name + \": YAAAAYYY!!!\"); } };   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '         // Full list of configuration options available here: // https://github.com/hakimel/reveal.js#configuration Reveal.initialize({ controls: true, progress: true, history: true, center: false, slideNumber: 'c / t', rollingLinks: false, keyboard: true, overview: true, margin: 0.10, maxScale: 1.00, theme: Reveal.getQueryHash().theme, // available themes are in /css/theme transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none transitionSpeed: 'default', multiplex: { secret: '', // null if client id: '', // id, obtained from socket.io server url: '' // Location of socket.io server }, // Optional libraries used to extend on reveal.js dependencies: [ {src: '../../vendor/reveal//plugin/klipse_reveal.js'}, { src: '../../vendor/reveal//lib/js/classList.js', condition: function() { return !document.body.classList; } }, { src: '../../vendor/reveal//plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }, { src: '../../vendor/reveal//plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } }, { src: '../../vendor/reveal//plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }] });    "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/slides/05-distant-reading-2/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " Distant Reading II .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( 'link' ); link.rel = 'stylesheet'; link.type = 'text/css'; link.href = '../../vendor/reveal//css/print/pdf.css'; document.getElementsByTagName( 'head' )[0].appendChild( link ); }     Recap  Openness in Historical Perspective \u0026ldquo;Abstract Models\u0026rdquo; in Moretti  distance from text patterns across genres, time, space  intro to JS     Graphs   condense data conceptualize mathematically convince readers a fundamentally rhetorical tool   Moretti\u0026rsquo;s Graphs    Quantitative research provides a type of data which is ideally independent of interpretations. (p.9)   yet, the graph is an argument: rise, fall, rise   A History of Readers    each phase a new \u0026ldquo;kind\u0026rdquo; of reader intensive, extensive, generic   Cycles  Event, cycle, longue durée: three time frames which have fared very unevenly in literary studies.  \u0026#x2026; cycles constitute temporary structures within the historical flow. (p.14)   event \u0026rarr; close reading longue durée \u0026rarr; grand narrative cycle \u0026rarr; ?   Cycles in Literature    A genre exhausts its potentialities\u0026#x2026; when its inner form is no longer capable of representing the most significant aspects of contemporary reality. (p. 17, fn 7)   Genre \u0026amp; Generation  \u0026#x2026; some kind of generational mechanism seems the best way to account for the regularity of the novelistic cycle\u0026#x2026; (p. 22)   \u0026ldquo;Normal literature\u0026rdquo; but \u0026ldquo;revolution\u0026rdquo; as \u0026ldquo;dying out\u0026rdquo;   From \u0026ldquo;the shift\u0026rdquo; to \u0026ldquo;a shift\u0026rdquo;    \u0026#x2026;the point is not who prevails in this or that skirmish, but exactly the opposite: no victory is ever definitive\u0026#x2026; the form keeps oscillating back and forth between the two groups. (p.29)   Moretti\u0026rsquo;s method  \u0026#x2026;the real point here\u0026#x2026; is the total heterogeneity of problem and solution: to make sense of quantitative data, I had to abandon the quantitative universe, and turn to morphology: evoke form, in order to explain figures.   how justified is this move? what do we learn from it?     Today: Trees      Moretti\u0026rsquo;s Evolutionism  Citations: Darwin, Feldman, Cavalli-Sforza In his genealogy: Karl Marx; H. G. Wells; E. O. Wilson; all of evolutionary psychology   Plots    Clues as evolved phenomenon  Doyle as canonical starting point for detective fiction But has a context; how to describe? note: not a personal context!   Styles    Free Indirect Style  A peculiar mix of indirect and direct discourse, which draws the verbal tenses and pronouns from the former, and the tone and the order of the sentence from the latter:  It was the abode of noise, disorder, and impropriety. Nobody was in their right place, nothing was done as it ought to be. She could not respect her parents, as she had hoped.   Why FIS?  appears to mark a major social transformation (\u0026ldquo;halfway btwn the social doxa and the individual voice, FIS is a good indicator of their changing balance of forces\u0026rdquo;)  Moretti\u0026rsquo;s goal: to quantitatively (?) trace these forces  Take a form, follow it from space to space, and study the reasons for its transformations: the \u0026rsquo;opportunistic, hence unpredictable\u0026rsquo; reasons of evolution.    Problematics  Teleological thinking? dealing with the \u0026ldquo;twisted branching\u0026rdquo;? is this really \u0026ldquo;quantitative\u0026rdquo;? Does this qualify as \u0026ldquo;insight\u0026rdquo;?     Summary: Moretti and History  labor-intensive quantification of sources glossing over problems of quantification continued reliance on expert opinion \u0026#x2013; but how is that expertise to be cultivated?     More Javascript  For loops! var historians= [\"Edward Gibbon\", \"Arnold Toynbee\", \"Leopold von Ranke\"]; for (h of historians) { console.log(h + \" was a historian.\"); } for (i=0; i   .CodeMirror { font-size: 2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   Conditionals var goodGuys = [\"CA\", \"UK\", \"US\"]; var badGuys=[\"DE\", \"AH\"]; var people = [ {name: \"Kaiser Wilhelm\", nat: \"DE\"}]; for (person of people) { if (badGuys.includes(person.nat)) { //console.log(person.name + \": BOOOOOOOOOOOO!!!\"); } };   .CodeMirror { font-size: 2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   the \u0026ldquo;Repeat\u0026rdquo; function var myString=\"hello\"; myString.repeat(5);   .CodeMirror { font-size: 2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   Check length var myString=\"Hello all you students.\", myArray = [\"Hello\", \"all\", \"you\", \"students\", \".\"], myObject = {greeting: \"Hello\", addressee: \"all you students\", punctuation: \".\" }, myNumber=25; //console.log(myString.length); //console.log(myArray.length); //console.log(myObject.length); //console.log(myNumber.length);   .CodeMirror { font-size: 2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   \u0026ldquo;Operator Overloading\u0026rdquo;  +, -, do different things w/ different variable types s = \"asdf\"; t= \"ghj\"; s+t;   .CodeMirror { font-size: 2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   Working with the DOM  Document Object  everything in the document can be manipulated here     Finding Elements  document.getElementById(\"str\") document.getElementByTagName(\"str\") document.getElementByClassName(\"str\")   Creating Elements  var newElement = document.createElement(\"str\")   Putting elements into the document  var newElement = document.createElement(\"str\") var oldElement = document.getElementByID(\"str\") oldElement.append(newElement)     live ex  HTML doc JS code         // Full list of configuration options available here: // https://github.com/hakimel/reveal.js#configuration Reveal.initialize({ controls: true, progress: true, history: true, center: false, slideNumber: 'c', rollingLinks: false, keyboard: true, overview: true, margin: 0.10, maxScale: 1.00, theme: Reveal.getQueryHash().theme, // available themes are in /css/theme transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none transitionSpeed: 'default', multiplex: { secret: '', // null if client id: '', // id, obtained from socket.io server url: '' // Location of socket.io server }, // Optional libraries used to extend on reveal.js dependencies: [ {src: '../../vendor/reveal//plugin/klipse_reveal.js'}, { src: '../../vendor/reveal//lib/js/classList.js', condition: function() { return !document.body.classList; } }, { src: '../../vendor/reveal//plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }, { src: '../../vendor/reveal//plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } }, { src: '../../vendor/reveal//plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }] });    "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/slides/05-js-dom/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " Week 5: JavaScript and the DOM .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( 'link' ); link.rel = 'stylesheet'; link.type = 'text/css'; link.href = '../../vendor/reveal//css/print/pdf.css'; document.getElementsByTagName( 'head' )[0].appendChild( link ); }     Working with the DOM  Document Object  everything in the document can be manipulated via the DOM     Inspecting the DOM      Finding Elements  \u0026ldquo;Vanilla\u0026rdquo; JavaScript (described in MDN)  document.querySelector(\"str\")  jQuery (convenience library)  $(\"str\") library must be loaded with \u0026lt;script src=\"http://code.jquery.com/jquery-3.3.1.min.js\"\u0026lt;/script\u0026gt;    we use jQuery in examples, but it\u0026rsquo;s your choice.  slightly different syntax \u0026amp; different return values, so be careful.      Change CSS of an Element $(\u0026#39;selector\u0026#39;).css(\u0026#39;property-name\u0026#39;, \u0026#39;value\u0026#39;)   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '     Get and Change Text Content $(\u0026#39;selector\u0026#39;).text() $(\u0026#39;selector\u0026#39;).text(\u0026#39;new value\u0026#39;)   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '     Get and Change Full inner HTML $(\u0026#39;selector\u0026#39;).text() $(\u0026#39;selector\u0026#39;).text(\u0026#39;new value, with valide HTML markup\u0026#39;)   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '     Append elements $(\u0026#39;selector\u0026#39;).append(\u0026#39;valid HTML Markup\n\u0026#39;)   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '     What does jQuery return?  an \u0026ldquo;array-like object\u0026rdquo; it\u0026rsquo;s not exactly an array, but you can use \u0026ldquo;of\u0026rdquo; to iterate over HTMl objects each element can use native DOM methods for HTML elements (cf MDN) to use jQuery methods on it, wrap it again in the $() function     Looping: over HTML elements let allElements = $(\u0026#39;selector\u0026#39;); // for.. in will NOT work!!!! for (e of allElements) { // this will loop through the *html elements* found by jQ $(e).doSomething(0) // if you want to use jquery methods, you have to jquery-ize first }   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '     Looping \u0026#x2013; advanced  Trickier! Uses a \u0026ldquo;callback function\u0026rdquo; \u0026#x2013; see this excellent, but still difficult, explanation $(\u0026#39;td.name\u0026#39;).each( function (index) { console.log(`here\u0026#39;s the content of cell number ${index}`); console.log($(this).text()); });   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '     Takeaways for us  it\u0026rsquo;s a wild world out there many complex concepts, but if you go slowly, it\u0026rsquo;s not impossible to figure out key is to understand that the DOM is a strutureo f HTML elements, which can be *created, destroyed,         // Full list of configuration options available here: // https://github.com/hakimel/reveal.js#configuration Reveal.initialize({ controls: true, progress: true, history: true, center: false, slideNumber: 'c / t', rollingLinks: false, keyboard: true, overview: true, margin: 0.10, maxScale: 1.00, theme: Reveal.getQueryHash().theme, // available themes are in /css/theme transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none transitionSpeed: 'default', multiplex: { secret: '', // null if client id: '', // id, obtained from socket.io server url: '' // Location of socket.io server }, // Optional libraries used to extend on reveal.js dependencies: [ {src: '../../vendor/reveal//plugin/klipse_reveal.js'}, { src: '../../vendor/reveal//lib/js/classList.js', condition: function() { return !document.body.classList; } }, { src: '../../vendor/reveal//plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }, { src: '../../vendor/reveal//plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } }, { src: '../../vendor/reveal//plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }] });    "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/slides/06-1-homework-help/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " Homework Help Day .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( 'link' ); link.rel = 'stylesheet'; link.type = 'text/css'; link.href = '../../vendor/reveal//css/print/pdf.css'; document.getElementsByTagName( 'head' )[0].appendChild( link ); }     Status Report  looked at and evaluated all Assignment 2\u0026rsquo;s assignment 3 is the crux of the course! can give limited help for next 24 hours or so     HTML Structures  for the rest of the course, coding is mostly creating HTML structures becaue HTML is tedious, lots of opportunity to introduce errors! How to avoid?  D.R.Y. (Don\u0026rsquo;t Repeat Yourself) if done right, guarantees that low-level problems only need to be solved once remember: laziness is a virtue      Writing \u0026ldquo;Atomic\u0026rdquo; Functions  Complex code is difficult to debug! instead, try to make your individual functions as simple as possible divide your problem into smallest possible parts (hence \u0026rsquo;atomic\u0026rsquo;) \u0026ldquo;chain\u0026rdquo; your functions together to recreate complexity much easier to localize failure     Making a card deck  Task: given a JSON data structure, generate a set of cards (like the ones we made in assignment 0, but simpler)  Person Name   lengthy text here   A Project of HIS393     { name: 'Person Name', blurb: 'lenghty text here', }    First, Map the assignment card deck \u0026rarr; set of cards  card \u0026rarr;       this is set of tagged elements so we might do something like this:  fn 1: tag some content fn 2: use fn 1 to make header structure fn 3: use fn 1 to make main structure fn 4: use fn 1 to make footer structure fn 5: use fn 2, fn 3, fn 4 to make sub-structures and then call fn 1 to wrap whole thing fn 6: loop through data structure, calling fn 5 once for each element   Now Name our functions fn 1: letsTag() fn 2: headMe()) fn 3: mainMe()) fn 4: footMe() fn 5: cardMe() fn 6: makeAllCards()   Start with Fn 1: letsTag function letsTag ( content, tagName, attrs) { output = `${content}`; return output; } letsTag('I am the main content', 'main', {style: 'border: 2px solid black;'});    Fn 2: headMe() function headMe (titleText) { let output=letsTag(titleText, 'h1'); output=letsTag(output, 'header'); return output } headMe('I am the title');    All the Rest function footMe () { let link = letsTag('A Project of HIS393', 'a', {href: 'https://digitalhistory.github.io/dh-website/'}); return letsTag(link, 'footer'); } function mainMe (blurb) { let p = letsTag(blurb, 'p'); return letsTag(p, 'main'); } function cardMe (person) { let header = headMe(person.name); let main = mainMe(person.blurb); let footer = footMe(); return letsTag(header + main + footer, 'card', {class: 'card'}); } function makeAllTheCards (people) { output = ''; for (p of people) { output += cardMe (p); } return $('main#page-main').append(output); } makeAllTheCards (allEntries);          // Full list of configuration options available here: // https://github.com/hakimel/reveal.js#configuration Reveal.initialize({ controls: true, progress: true, history: true, center: false, slideNumber: 'c / t', rollingLinks: false, keyboard: true, overview: true, margin: 0.10, maxScale: 1.00, theme: Reveal.getQueryHash().theme, // available themes are in /css/theme transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none transitionSpeed: 'default', multiplex: { secret: '', // null if client id: '', // id, obtained from socket.io server url: '' // Location of socket.io server }, // Optional libraries used to extend on reveal.js dependencies: [ {src: '../../vendor/reveal//plugin/klipse_reveal.js'}, { src: '../../vendor/reveal//lib/js/classList.js', condition: function() { return !document.body.classList; } }, { src: '../../vendor/reveal//plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }, { src: '../../vendor/reveal//plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } }, { src: '../../vendor/reveal//plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }] });    "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/slides/06-distant-reading-3/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " Distant Reading III .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( 'link' ); link.rel = 'stylesheet'; link.type = 'text/css'; link.href = '../../vendor/reveal//css/print/pdf.css'; document.getElementsByTagName( 'head' )[0].appendChild( link ); }     JS Questions  where do I run Javascript? how do I define a function? what are return values? DOM manipulation   Running JS  Atom \u0026#x2013; js-console (under packages menu) Firefox: Scratchpad + console Chrome: console alone any of my lectures!   Defining a function function someFUnctionName (parameter1/parameter2,parameterEtc) { //function body return someValue }   .CodeMirror { font-size: 2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   DOM  identifying nodes adding a node clearing a node  // nothing to see here yet   .CodeMirror { font-size: 2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '     No Clothes, no body  It’s not that the emperor has no clothes(that would be fine); it’s that no one knows what the emperor looks like. (Ramsey 2010)   \u0026ldquo;It\u0026rsquo;s one thing to worry that your canon isn\u0026rsquo;t sufficiently inclusive, or broad, or representative. It\u0026rsquo;s another thing when your canon has no better chance of being these thngs than a random selection. When we get up into the 14-million book rnag, books that are known by more than 2 living people are already \u0026rdquo;popular\u0026ldquo;  (let alone Hamlet!!!)     Finally: Trees      Moretti\u0026rsquo;s Evolutionism  Citations: Darwin, Feldman, Cavalli-Sforza In his genealogy: Karl Marx; H. G. Wells; E. O. Wilson; all of evolutionary psychology \u0026ldquo;morphological\u0026rdquo; diagrams \u0026#x2013; \u0026ldquo;with form and history as the two variableso f the analysis\u0026rdquo; \u0026#x2013; vertical is time, horizontal is \u0026ldquo;formal diversification\u0026rdquo; eventually leading to \u0026rsquo;well-marked varieties\u0026rsquo;   Plots    literary market as \u0026ldquo;ruthless competition\u0026rdquo; hinging on form (p.48). \u0026ldquo;readers discover that they like a certain device, and if a story doesn\u0026rsquo;t seem to include it, they simply don\u0026rsquo;t read it (and the story becomes extinct)\u0026rdquo;. Somewhat bizarre positioning over readres and markets as Nat Sel pressures.    Clues as evolved phenomenon  Doyle as canonical starting point for detective fiction But has a context; how to describe? note: not a personal context!   the very small and the very large: \u0026ldquo;devices \u0026amp; genres: not texts\u0026rdquo;. Texts are \u0026ldquo;the real objects\u0026rdquo; of literature; but they are not the right objects of knowledge for literary history.    Styles    Free Indirect Style  A peculiar mix of indirect and direct discourse, which draws the verbal tenses and pronouns from the former, and the tone and the order of the sentence from the latter:  It was the abode of noise, disorder, and impropriety. Nobody was in their right place, nothing was done as it ought to be. She could not respect her parents, as she had hoped.   because it has this weird mix of personal and impersonal, distance and intimacy, it evokes a kind of confusion in the readre \u0026#x2013; and\u0026#x2026;    Why FIS?  appears to mark a major social transformation (\u0026ldquo;halfway btwn the social doxa and the individual voice, FIS is a good indicator of their changing balance of forces\u0026rdquo;)  Moretti\u0026rsquo;s goal: to quantitatively (?) trace these forces  Take a form, follow it from space to space, and study the reasons for its transformations: the \u0026rsquo;opportunistic, hence unpredictable\u0026rsquo; reasons of evolution.    \u0026#x2026;in Austen in particular, we can associate it with t stron g correspondence between the social norms of the time, and the heroines of the novel. In the Latin American dictator novels, the style instead critiques the one-to-one corresponence that the dictator wants to assert between his personal interior life and the social order. So as we watch the trnasformation of FIS, we can see also a transformation i n the balance between the individual and the social, as poles of concern in the novelistic endeavour.   Problematics  the approaches I have discussed\u0026#x2026; share a clear preference for explanation over interpretation   Teleological thinking? is this really \u0026ldquo;quantitative\u0026rdquo;? Does this qualify as \u0026ldquo;insight\u0026rdquo;?         // Full list of configuration options available here: // https://github.com/hakimel/reveal.js#configuration Reveal.initialize({ controls: true, progress: true, history: true, center: false, slideNumber: 'c', rollingLinks: false, keyboard: true, overview: true, margin: 0.10, maxScale: 1.00, theme: Reveal.getQueryHash().theme, // available themes are in /css/theme transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none transitionSpeed: 'default', multiplex: { secret: '', // null if client id: '', // id, obtained from socket.io server url: '' // Location of socket.io server }, // Optional libraries used to extend on reveal.js dependencies: [ {src: '../../vendor/reveal//plugin/klipse_reveal.js'}, { src: '../../vendor/reveal//lib/js/classList.js', condition: function() { return !document.body.classList; } }, { src: '../../vendor/reveal//plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }, { src: '../../vendor/reveal//plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } }, { src: '../../vendor/reveal//plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }] });    "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/slides/07-01-why-spatial-history/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " 07: Why Spatial history? .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( 'link' ); link.rel = 'stylesheet'; link.type = 'text/css'; link.href = '../../vendor/reveal//css/print/pdf.css'; document.getElementsByTagName( 'head' )[0].appendChild( link ); }     Assignment Notes  Assignment 3: good work!  note: div:nth-child() means \u0026ldquo;any div that is the nth-child())\u0026rdquo;, not \u0026ldquo;the nth child of any div\u0026rdquo;  Assignment 4: not up yet! But the non-technical instructions in last year\u0026rsquo;s version will still apply.     Recap  Hermeneutics and understanding What does it mean to understand large numbers of texts, and what is the nature of expertise? searching vs browsing data as evidence, data as inspiration     Summary  Space \u0026amp; Place The Work Maps Do: lying; presenting; creating     Spatial Turn  Space and \u0026ldquo;place\u0026rdquo; Space as historically constituted What is \u0026ldquo;the History of a place?\u0026rdquo;   Questions for us  What does it mean to foreground spatial characteristics in a spatial history? How do maps \u0026amp; media transform the kinds of stories we can tell     Looking at Whales  impressive data collection arresting images but conclusion is about pillage: not immediately apparent to the eye.   One version of the story      Lying with Maps  maps are rhetorical objects use of shade, color, can be very misleading same numbers can produce very different visualizations   birth rates        \u0026ldquo;Critical\u0026rdquo; Cartography  if maps \u0026ldquo;lie\u0026rdquo;, or, at least, if maps are arguments, then:  what relations of power do they reveal/participate in? if we are aware of the \u0026ldquo;lying\u0026rdquo;, how can we work with it critically?      Maps Make Landscapes  U.S. Land Ordinance of 1785 establishes grid mappping method as national system lots sold according to this method         Maps Reinscribe Power  \u0026ldquo;Home Owners Loan Corporations (HOLC) (1930\u0026rsquo;s)  US Federal Agency in New Deal tasked with preventing foreclosures ranked neighbourhoods by \u0026ldquo;desirability\u0026rdquo; ancestor to contemporary maps used by real estate brokers        Mapping enrols State Power      \u0026#x2026;and technological power            // Full list of configuration options available here: // https://github.com/hakimel/reveal.js#configuration Reveal.initialize({ controls: true, progress: true, history: true, center: false, slideNumber: 'c / t', rollingLinks: false, keyboard: true, overview: true, margin: 0.10, maxScale: 1.00, theme: Reveal.getQueryHash().theme, // available themes are in /css/theme transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none transitionSpeed: 'default', multiplex: { secret: '', // null if client id: '', // id, obtained from socket.io server url: '' // Location of socket.io server }, // Optional libraries used to extend on reveal.js dependencies: [ {src: '../../vendor/reveal//plugin/klipse_reveal.js'}, { src: '../../vendor/reveal//lib/js/classList.js', condition: function() { return !document.body.classList; } }, { src: '../../vendor/reveal//plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }, { src: '../../vendor/reveal//plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } }, { src: '../../vendor/reveal//plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }] });    "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/slides/10-02-popcorn/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " Popcorn/Oral History .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( 'link' ); link.rel = 'stylesheet'; link.type = 'text/css'; link.href = '../../vendor/reveal//css/print/pdf.css'; document.getElementsByTagName( 'head' )[0].appendChild( link ); }     Taking Stock  The End is Nigh!! Assignment 4: Planning return ~ Friday/Saturday Assignment 5: Required for everyone (!!)     Oral History Assignment  intellectual goal: think hard about nature of oral history, and how to use digital media effectively technical goal: think more about working with non-textual media, about HTML structures, and about APIs (monsters in the deep)     Before Going Further: Update Repos git push # super important, do this first!!! git remote add upstream https://github.com/DigitalHistory/advanced-topics.git git fetch upstream master git checkout -b update-attempt git merge upstream/master # if that all works (it should) git checkout master git pull upstream master      What the heck is this?  Popcorn: media \u0026ldquo;events\u0026rdquo; framework for audio \u0026amp; video annotation  developed by Mozilla for about 5 years before it was orphaned. perhaps being revivified keeps track of media playback, and renders specified web content between start and end timecodes. for us: turns audio file into a kind of imovie-style slideshow except that the \u0026ldquo;slides\u0026rdquo; are arbitrary web content instead of photos. in particular, can include google maps, wikipeida pages, and some other types of content.      Popcorn framework  Library-Plugin framework  main library tracks media element, renders content plugins generate html to feed to main every \u0026ldquo;event\u0026rdquo; (or \u0026ldquo;slide\u0026rdquo;) is generated by calling a plugin with a JS object as parameter. cf. line 42 of popcorn-data-from-google.js to see how this works    we don\u0026rsquo;t have to worry about the main library  basically no coding to do o nthis assignment!  focus on markdown skills, google sheet      Plugin Structure pop.footnote({ start: 50, end: 90, text: \"Second Footnote!\", target: \"popcorn-container\" });   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   plugins define a method of the main popcorn object each plugin has its own required and optional parameters, which you can read about in the docs      Google sheets: API Power  Line 16 in js/~popcorn-data-from-google.js: var public_spreadsheet_key = \u0026#39;https://docs.google.com/spreadsheets/d/1pL_Lj62_ZcW7iawTCQ_5BQsmdynCtC8y5BCNy3k2LOM/pubhtml?gid=0\u0026single=true\u0026#39;;   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   uses Google JSON API, which represents each spreadsheet row as a JSON object column headers as property names script iterates through rows \u0026amp; invokes appropriate popcorn plugin for each row, w/ column values as plugin parameter properties if you use some other plugin that I haven\u0026rsquo;t mentioned, you may need to add a column! YOU DON\u0026rsquo;T HAVE TO DO THE PROGAMMING WORK \u0026#x2013; managed for you     Tabletop: small interpreter demon  Google Spreadsheets API speaks a Byzantine language of Hell Tabletop lets you speak simple JS cf very clear and helpful Tabletop instructions and also line 21 in popcorn-data-from-google.js:  var mytables = Tabletop.init( { key: public_spreadsheet_key, callback: processInfo , simpleSheet: false } );   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '     Getting Started: First, Copy Spreadsheet  go to my sheet: https://docs.google.com/spreadsheets/d/1pL_Lj62_ZcW7iawTCQ_5BQsmdynCtC8y5BCNy3k2LOM/edit#gid=0 File \u0026#x2013;\u0026gt; Make a copy Under File \u0026#x2013;\u0026gt; Publish to the web, make sure yr sheet is published NOT DONE YET! go to \u0026ldquo;Share\u0026rdquo; and \u0026ldquo;Copy Link to Share\u0026rdquo; this is your new key!!!! insert into your js file     (other way) Spreadsheet URL var public_spreadsheet_key = \u0026#39;https://docs.google.com/spreadsheets/d/1pL_Lj62_ZcW7iawTCQ_5BQsmdynCtC8y5BCNy3k2LOM/pubhtml?gid=0\u0026single=true\u0026#39;;   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   Replace ONLY THE PART BTWN d and /pubhtml with the spreadsheet \u0026ldquo;key\u0026rdquo; from yr new sheet     Run server cd advanced-topics-yr-name npm install npm run server \u0026      Open in browser firefox localhost:8080/oral-history      use DevTools to look for errors      Error Sources  bad spreadsheet URL bad time codes etc. in spreadsheet JS syntax errors in popcorn-data-from-google.js JS syntax errors in index.html     Good and Less Good Annotations  Add context/info clarify Comment     \u0026ldquo;Seek\u0026rdquo; function var seek = function (time) { document.getElementById(\"media\").currentTime= time; };   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   \u0026lt;a href=\"javascript:seek(75)\"\u0026gt;seek to 1:15\u0026lt;/a\u0026gt;            // Full list of configuration options available here: // https://github.com/hakimel/reveal.js#configuration Reveal.initialize({ controls: true, progress: true, history: true, center: false, slideNumber: 'c / t', rollingLinks: false, keyboard: true, overview: true, margin: 0.10, maxScale: 1.00, theme: Reveal.getQueryHash().theme, // available themes are in /css/theme transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none transitionSpeed: 'default', multiplex: { secret: '', // null if client id: '', // id, obtained from socket.io server url: '' // Location of socket.io server }, // Optional libraries used to extend on reveal.js dependencies: [ {src: '../../vendor/reveal//plugin/klipse_reveal.js'}, { src: '../../vendor/reveal//lib/js/classList.js', condition: function() { return !document.body.classList; } }, { src: '../../vendor/reveal//plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }, { src: '../../vendor/reveal//plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } }, { src: '../../vendor/reveal//plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }] });    "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/slides/10-oral-history/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " 10: Visualization/Engaged History/Oral History .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( 'link' ); link.rel = 'stylesheet'; link.type = 'text/css'; link.href = '../../vendor/reveal//css/print/pdf.css'; document.getElementsByTagName( 'head' )[0].appendChild( link ); }     Recap  Spatial History  new tools form GIS new questions from cultural geography maps \u0026amp; visualizations are rhetorical and need interpretation      Today  a bit more on visualization (catchup really) Excursus on \u0026ldquo;Objectivity\u0026rdquo; What\u0026rsquo;s Special about Oral History?     Playfair: Early Techniques  multivariate data; area as quantity; pie chart  William Playfair (1789-1823), Scottish engineer \u0026amp; political scientist; brother John a major figure in Scottish enlightenment, which saw Adam Smith, James Watt, etc.; never a success in business, but interest in both tech \u0026amp; finance.     Playfair: Early Techniques      Charles Joseph Minard: Storytelling    CJ Minard (1781-1870); civil engineer; drawn in 1869; six different dimensions: latitude, longitude, direction of movement, time, temperature, and the size of the Grand Army. Minard’s achievement here is expertly illustrating a complex, multivariate time-space story in a compelling and concise display. Tufte has famously endorsed it as the “best statistical graphic ever drawn.” 11 E.J. Marey, a contemporary of Minard, praised the map as “seeming to defy the pen of the historian by its brutal eloquence.” 1  \u0026ldquo;The numbers of men present are represented by the widths of the colored zones in a rate of one millimeter for ten thousand men; these are also written beside the zones. Red designates men moving into Russia, black those on retreat. — The informations used for drawing the map were taken from the works of Messrs. Thiers, de Ségur, de Fezensac, de Chambray and the unpublished diary of Jacob, pharmacist of the Army since 28 October. In order to facilitate the judgement of the eye regarding the diminution of the army, I supposed that the troops under Prince Jèrôme and under Marshal Davoust, who were sent to Minsk and Mobilow and who rejoined near Orscha and Witebsk, had always marched with the army.\u0026rdquo;     Neurath: Isotype    Unified Encyclopedia of Science; Vienna Circle; the Ship     Working with Data  Selfiexploratory Network Graphs    Panama Papers  ICIJ visualizations Fusion graph network visualization     Objectivity in History  All history ultimately depends on its social purpose. (Thompson)   Oral sources are not objective. This of course applies to every source, though the holiness of writing often leads us to forget it. (Portelli)   What does it mean to be objective and/or neutral? What happens to history that abandons or modifies this standard?   Myth  not untruth, but beyond truth. Myths structure understanding of world, self, and events, give meaning to action, and purpose to the world.  Myth of Prometheus \u0026amp; Fire gives an account of reason \u0026amp; techne in Greece Creation Myth of Genesis give guide to relationships among (e.g.) Man, Woman, God, Nature \u0026rsquo;Myth of Progress\u0026rsquo; makes sense of modernity George Washington \u0026amp; the apple tree ties virtue to the State \u0026ldquo;multiculturalism\u0026rdquo; as a mythical strucutrefor Canadians    emphasize \u0026ldquo;beyond\u0026rdquo;   Objectivity as Founding Myth  fundamental to our pursuit but deeply problematic commitment to: fixity of the past; sharp separation between subject \u0026amp; object; prior nature of fact to interpretation \u0026ldquo;wie es eigentlich gewesen\u0026rdquo; as bedrock and then the Twentieth Century   Leopold von Ranke, 1824, Geschichte der romanischen und germanischen Völker, \u0026ldquo;wie es eigentlich gewesen\u0026rdquo;.    Epistemological Challenges  the fact/value distinction structures of knowledge contexts of interpretation standpoints \u0026amp; the view from nowhere \u0026ldquo;relativism\u0026rdquo; as nemesis and saviour   fact/value distinction: between what is and what ought to be, or between raw reality and interpretation  undermined not just for history but even for science: theory-ladenness of observation (Pierre Duhem, WVO Quine, others)  structures \u0026amp; contexts: we make sense of the world through coherent, interlocked structures of meaning. We can\u0026rsquo;t evaluate turth claims outside of those strctures These problems are sort-of solved by a variety of movments going by name of relativism, but they bring a whole bunch of serious problems with them, especially moral ones.   Take-home: knowledge about the past turns out to be much more unstable/complex than it first appears.  and, even i n the absence of a clear/straightforward standard for \u0026ldquo;truth\u0026rdquo; or \u0026ldquo;objectivity\u0026rdquo;, we still need a standard of \u0026ldquo;integrity\u0026rdquo;.      Truth and Meaning in Oral History  The first thing that makes oral history different, therefore, is that it tells us less about events than about their meaning\u0026#x2026; Oral sources are credible but with a different credibility. The importance of oral testimony may lie not in its adherence to fact, but rather in its departure from it, as imagination, symbolism, and desire emerge. (Portelli)   we can learn about the past without limiting ourseles to the quest for facts Oral History shines best where it uncovers relationships of meaning: how does this union strike or this car bomb explosion or this assasisnation resonate throughout a community, and get tied back to actions/events that preceded or followed it?    Politics of engagement  Oral sources are a necessary (not a sufficient) condition for a history of the nonhegemonic classes; they are less necessary (though by no means useless) for the history of the ruling classes, who have had control over writing and leave behind a much more abundant written record. (Portelli)   New Social Movements and subversive history History from Below: History Workshop; Radical History; Race Traitor slow elaboration of self-aware \u0026rsquo;engagement\u0026rsquo; by scholars oral history central to this champs de bataille  challenges to objectivity/fact as goal growing role for empathy as technique    emphasis on meaning leads almost seamlessly into forms of \u0026ldquo;engagement\u0026rdquo; infiltration of academia by radicals from movements of the 50s, 60s, and 70s. interest in harmonizing political work and academic pursuits     Oral History as Redemption  In the most general sense, once the life experience of people of all kinds can be used as its raw material, a new dimension is given to history. (Thompson, 24)   1980\u0026rsquo;s: \u0026rsquo;testimony\u0026rsquo; in Central American solidarity movement; 1990\u0026rsquo;s \u0026amp; later: Truth and Reconciliation Commissions (South Africa; Australia; Chile; Argentina; Guatemala; Canada) tensions between truth and experience   Having been mobilized as this kind of a tool, Oral History finds its way into many domains of activity beyind the historical profession.  tightrope of honoring subjects/subject matter \u0026amp; allegiance to some standard of integrity    Ethical Demands of Engagement  \u0026ldquo;Engagement\u0026rdquo; a terribly difficult stance to maintain Not a rejection of \u0026rsquo;objectivity\u0026rsquo;, but a refinement balancing btwn epistemic virtues constant vigilance!   balance objectivity, neutrality, with ethical responsibilities (ov various kinds), also with complex engagements w/ meaning as it propagates across communities.      Questions of Form  transcripts not the same as tape tape not the same as digital media there are lots of kinds of \u0026rsquo;oral history\u0026rsquo;       Ethics of Oral History  historians\u0026rsquo; responsibilities  respect handle materials carefully seek consent at all stages  Forms  ensure they understand it make sure they KNOW you intend to publish on the web  give them MULTIPLE chances to withdraw       Active Listening  Interviewee: I practically had a nervous breakdown when I discovered my sister had cancer, you know; it was kind of like knocking the pins [out from under me] \u0026#x2013; and I had, after the second boy was born, I just had ill health for quite a few years. I evidently had a low-grade blood infection or something. Because I was very thin, and, of course, I kept working hard. And every fall, why, I\u0026rsquo;d generally spend a month or so being sick \u0026#x2013; from overdoing, probably.  Interviewer: What kind of farming did you do right after you were married?   Active Listening  Don\u0026rsquo;t be afraid to deviate from script pay attention to what you hear   these are skills every historian needs of course we also need to be careful reading written texts. But the writtne text wil lstil lbe there when we go back to reread. The interview is actively shaped by our participation OH offers special opportunities when it comes to redirecting your research \u0026#x2013; but you have to be able to seize them in the moment. In this sense, more performative than other parts of history; closer to anthropology, to journalism, in effect, to all theo ther disciplines where OH is used!      Popcorn/Oral History  intellectual goal: think hard about the \u0026ldquo;text\u0026rdquo; technical goal: think more about working with non-textual media, and about HTML structures   Repo Update git push # super important, do this first!!! git remote add upstream https://github.com/DigitalHistory/advanced-topics.git git fetch upstream master git checkout -b update-attempt git merge upstream/master # if that all works (it should) git checkout master git pull upstream master    Popcorn framework  main library plugins   we don\u0026rsquo;t have to worry about the main library  basically no coding to do o nthis assignment!  focus on markdown skills, google sheet    Plugin Structure pop.footnote({ start: 50, end: 90, text: \"Second Footnote!\", target: \"popcorn-container\" });   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   Google sheets  Line 10 in /js/~popcorn-data-from-google.js: var public_spreadsheet_key = \u0026#39;https://docs.google.com/spreadsheets/d/1pL_Lj62_ZcW7iawTCQ_5BQsmdynCtC8y5BCNy3k2LOM/pubhtml?gid=0\u0026single=true\u0026#39;;   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   update this line (l. 10 in /js/~popcorn-data-from-google.js) \u0026amp; yr good to go   \u0026ldquo;Seek\u0026rdquo; function var seek = function (time) { document.getElementById(\"media\").currentTime= time; };   .CodeMirror { font-size: 1.2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   \u0026lt;a href=\"javascript:seek(75)\"\u0026gt;seek to 1:15\u0026lt;/a\u0026gt;        // Full list of configuration options available here: // https://github.com/hakimel/reveal.js#configuration Reveal.initialize({ controls: true, progress: true, history: true, center: false, slideNumber: 'c / t', rollingLinks: false, keyboard: true, overview: true, margin: 0.10, maxScale: 1.00, theme: Reveal.getQueryHash().theme, // available themes are in /css/theme transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none transitionSpeed: 'default', multiplex: { secret: '', // null if client id: '', // id, obtained from socket.io server url: '' // Location of socket.io server }, // Optional libraries used to extend on reveal.js dependencies: [ {src: '../../vendor/reveal//plugin/klipse_reveal.js'}, { src: '../../vendor/reveal//lib/js/classList.js', condition: function() { return !document.body.classList; } }, { src: '../../vendor/reveal//plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }, { src: '../../vendor/reveal//plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } }, { src: '../../vendor/reveal//plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }] });    "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/slides/11-oral-history/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " 11: Oral History \u0026amp; Remix Culture .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( 'link' ); link.rel = 'stylesheet'; link.type = 'text/css'; link.href = '/vendor/reveal//css/print/pdf.css'; document.getElementsByTagName( 'head' )[0].appendChild( link ); }     Copy Spreadsheet  go to my sheet: https://docs.google.com/spreadsheets/d/1pL_Lj62_ZcW7iawTCQ_5BQsmdynCtC8y5BCNy3k2LOM/edit#gid=0 File \u0026#x2013;\u0026gt; Make a copy Under File \u0026#x2013;\u0026gt; Publish to the web, make sure yr sheet is published the \u0026ldquo;key\u0026rdquo; is btwn /d/ and /edit     Spreadsheet URL var public_spreadsheet_key = \u0026#39;https://docs.google.com/spreadsheets/d/1pL_Lj62_ZcW7iawTCQ_5BQsmdynCtC8y5BCNy3k2LOM/pubhtml?gid=0\u0026single=true\u0026#39;;   .CodeMirror { font-size: 2em; }   window.klipse_settings = { selector_eval_js: \".klipse\" };   '   Replace ONLY THE PART BTWN d and /pubhtml with the spreadsheet \u0026ldquo;key\u0026rdquo; from yr new sheet     Run server cd advanced-topics-yr-name npm install npm run server \u0026      Open in browser firefox localhost:8080/oral-history      use DevTools to look for errors    Error Sources  bad spreadsheet URL bad time codes etc. in spreadsheet JS syntax errors in popcorn-data-from-google.js JS syntax errors in index.html     Good and Less Good Annotations  Add context/info clarify Comment         // Full list of configuration options available here: // https://github.com/hakimel/reveal.js#configuration Reveal.initialize({ controls: true, progress: true, history: true, center: false, slideNumber: 'c', rollingLinks: false, keyboard: true, overview: true, margin: 0.10, maxScale: 1.00, theme: Reveal.getQueryHash().theme, // available themes are in /css/theme transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none transitionSpeed: 'default', multiplex: { secret: '', // null if client id: '', // id, obtained from socket.io server url: '' // Location of socket.io server }, // Optional libraries used to extend on reveal.js dependencies: [ {src: '/vendor/reveal//plugin/klipse_reveal.js'}, { src: '/vendor/reveal//lib/js/classList.js', condition: function() { return !document.body.classList; } }, { src: '/vendor/reveal//plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '/vendor/reveal//plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '/vendor/reveal//plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }, { src: '/vendor/reveal//plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } }, { src: '/vendor/reveal//plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }] });    "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/slides/12-citizen-history/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " 12: Citizen History .underline { text-decoration: underline; }   if( window.location.search.match( /print-pdf/gi ) ) { var link = document.createElement( 'link' ); link.rel = 'stylesheet'; link.type = 'text/css'; link.href = '../../vendor/reveal//css/print/pdf.css'; document.getElementsByTagName( 'head' )[0].appendChild( link ); }     What we\u0026rsquo;ve learned   Text is Code  all our work is \u0026ldquo;digital\u0026rdquo; now   The 3 layers of the web  structure presentation dynamism   The \u0026ldquo;Public\u0026rdquo; and \u0026ldquo;the Public Sphere\u0026rdquo;  media constrain the possible the \u0026ldquo;public\u0026rdquo; is probably not unitary don\u0026rsquo;t have to be a genius to make a contribution   Invocations and Incantations  Using APIs to take advantage of other people\u0026rsquo;s work writing only what you have to   Open and Closed Systems  what \u0026ldquo;open source\u0026rdquo; means for us   Maps and Legends  organizing stories around space digital maps are spcial   Storytelling  the distinctive features of oral history problems of truth and objectivity collaboration and authorship     What you might do  History doesn\u0026rsquo;t have to stop at graduation  Changing Landscape of Profession and Expertise  how will \u0026ldquo;professionalism\u0026rdquo; stretch and change shape in the future?   Continuing as \u0026ldquo;historian\u0026rdquo; after graduation  history fora \u0026amp; groups participating in crowdsourced projects writing with a historian\u0026rsquo;s eye   Use your new skills!  you\u0026rsquo;re not a programmer yet, but you now understand how code works lots of ways to learn lots of roles for \u0026ldquo;demi-geeks\u0026rdquo;   History and Digital Literacy as Citizenship  remind everyone that we live together in a world shaped both by the events of the past and by a tremendously powerful media landscape. Charting a course through this new world requires some understanding of both. Promises and pitfalls of DH are the promises and pitfalls of the new world.     Congratulations  you\u0026rsquo;veall come a really long way this semester. Lots of your cohort quit before you did. Even if you are just scraping by, you have had to work to a high standard. You deserve a round of applause!         // Full list of configuration options available here: // https://github.com/hakimel/reveal.js#configuration Reveal.initialize({ controls: true, progress: true, history: true, center: false, slideNumber: 'c / t', rollingLinks: false, keyboard: true, overview: true, margin: 0.10, maxScale: 1.00, theme: Reveal.getQueryHash().theme, // available themes are in /css/theme transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none transitionSpeed: 'default', multiplex: { secret: '', // null if client id: '', // id, obtained from socket.io server url: '' // Location of socket.io server }, // Optional libraries used to extend on reveal.js dependencies: [ {src: '../../vendor/reveal//plugin/klipse_reveal.js'}, { src: '../../vendor/reveal//lib/js/classList.js', condition: function() { return !document.body.classList; } }, { src: '../../vendor/reveal//plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } }, { src: '../../vendor/reveal//plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }, { src: '../../vendor/reveal//plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } }, { src: '../../vendor/reveal//plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }] });    "
},
{
	"uri": "https://digitalhistory.github.io/dh-website/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://digitalhistory.github.io/dh-website/slides/",
	"title": "Lecture Slides",
	"tags": [],
	"description": "",
	"content": "Here are the lecture slides:\n"
}]