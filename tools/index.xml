<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools and Tricks on HIS393: Digital History</title>
    <link>http://digitalhistory.github.io/tools/</link>
    <description>Recent content in Tools and Tricks on HIS393: Digital History</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 May 2020 10:09:23 -0400</lastBuildDate>
    
	<atom:link href="http://digitalhistory.github.io/tools/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Quick JS Operator review</title>
      <link>http://digitalhistory.github.io/tools/javascript-operators/</link>
      <pubDate>Thu, 28 May 2020 10:09:23 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/tools/javascript-operators/</guid>
      <description>Operator Meaning     = sets the left hand variable equal to the right hand expression   == tests whether the two sides of the the expression are equal   === tests whether they are both the same value and the same type (generally we won&amp;rsquo;t worry about this)   != tests whether the two sides are not equal   &amp;gt;,&amp;lt;,&amp;gt;=,&amp;lt;= exactly what you expect   += adds the right-hand expression to the left-hand variable    Asa bonus here are a couple of string tricks:</description>
    </item>
    
    <item>
      <title>JS DOM Modification Cheatsheet</title>
      <link>http://digitalhistory.github.io/tools/js-cheat-sheet/</link>
      <pubDate>Thu, 28 May 2020 10:05:32 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/tools/js-cheat-sheet/</guid>
      <description>Jquery and Vanilla JS equivalents:
   Task jQuery &amp;ldquo;Vanilla&amp;rdquo; JS     Get all matching elements $(&#39;selector&#39;) document.querySelectorAll(&#39;selector&#39;)   Get first matching element $(&#39;selector&#39;).first() document.querySelector(&#39;selector&#39;)   Change CSS prop $(&#39;selector&#39;).css(&#39;property-name&#39;, &#39;value&#39;) document.querySelector(&#39;selector&#39;).style.property-name = &#39;value&#39;     const matches = document.querySelectorAll(&#39;selector&#39;)     for (const m of matches) {m.style.property-name=&#39;value&#39;;}   Change Text Value $(&#39;selector&#39;).text(&#39;new text here&#39;); document.querySelector(&#39;selector&#39;).textContent = &#39;new text here&#39;;     const matches = document.</description>
    </item>
    
    <item>
      <title>Quick JSON tips</title>
      <link>http://digitalhistory.github.io/tools/json-tips/</link>
      <pubDate>Thu, 07 May 2020 09:24:16 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/tools/json-tips/</guid>
      <description>Just a few words about JSON format. The format of the assignments JSON file will make more sense after we&amp;rsquo;ve learned a little bit of JavaScript (in the next 3 weeks). For this assignment I&amp;rsquo;m not really asking you to understand the format, but you do have to obey the syntax rules or the assignment tests will fail. JSON is a portable data format used for moving data from one source to another.</description>
    </item>
    
    <item>
      <title>Setup</title>
      <link>http://digitalhistory.github.io/tools/setup/</link>
      <pubDate>Tue, 05 May 2020 01:43:41 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/tools/setup/</guid>
      <description>For the duration of this course, you will need to set up a &amp;ldquo;development environment&amp;rdquo; to do your work. You&amp;rsquo;ll need to download, install, and interact with a group of programs and services that make it possible to do your work. Setting your environment up can be difficult, so be sure to budget some time to do so! Also be aware that these tools will take up significant spae on your laptop and may cause your laptop to slow down somewhat if run simultaneously with</description>
    </item>
    
    <item>
      <title>Using VSCode</title>
      <link>http://digitalhistory.github.io/tools/using-vscode/</link>
      <pubDate>Mon, 04 May 2020 18:25:10 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/tools/using-vscode/</guid>
      <description>Microsoft&amp;rsquo;s Visual Studio Code is an amazing general-purpose code editor. Most people I collaborate with use it as their primary editor, and that will be true in most professional settings you enter. This is the first year we&amp;rsquo;re using it in the class, and I have some high hopes for it.
As with any powerful tool, it can take a little while to get comfortable with VSCode. The documentation is excellent, but may sometimes assume more advanced programming skills than you have.</description>
    </item>
    
    <item>
      <title>Understanding Popcorn</title>
      <link>http://digitalhistory.github.io/tools/understanding-popcorn/</link>
      <pubDate>Thu, 21 Nov 2019 15:16:50 -0500</pubDate>
      
      <guid>http://digitalhistory.github.io/tools/understanding-popcorn/</guid>
      <description>You may find it useful, as you prepare for the next assignment, to read the following post!
What is Popcorn Popcorn is a Javascript &amp;ldquo;library&amp;rdquo; – a small collection of programs – that lets web designers key events in a web page to a time-code in a media file. So essentially, popcorn lets you &amp;ldquo;cue up&amp;rdquo; content ad display it only during fixed periods, while a media element is playing. If you then pause or manually rewind/fast-forward the media element (audio or video), the events will also reset to the appropriate time.</description>
    </item>
    
    <item>
      <title>Javascript: Resources and Tools</title>
      <link>http://digitalhistory.github.io/tools/js-resources-tools/</link>
      <pubDate>Wed, 25 Sep 2019 22:32:09 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/tools/js-resources-tools/</guid>
      <description>Resources There are many, many excellent JavScript resources on the web. I strongly recommend the MDN JavaScript Learning Pathway. I also have a very high opinion of Eloquent Javascript, but in past years students have often found it somewhat difficult. However, it rewards careful study, teaches excellent habits, and encourages creative thinking while coding. Both MDN and EJ have built-in JS Consoles forexperimenting with code (see below).
MDN also has a more advanced guide to JavaScript which starts with this &amp;ldquo;reintroduction&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Navigating at the Command Line</title>
      <link>http://digitalhistory.github.io/tools/navigating-command-line/</link>
      <pubDate>Tue, 10 Sep 2019 12:22:30 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/tools/navigating-command-line/</guid>
      <description>The Programming Historian link below is excellent. Having some trouble with screenshots ATM, will fix soon as I can reload my desktop – but for next few hours pls refer to the PH link for images!
One common issue for people new to the command line is that it can be tough to understand the notion of location in the filesystem. Most ordinary users interact with their filesystems through the so-called GUI layer – the graphical interface of windows.</description>
    </item>
    
    <item>
      <title>Installing Node Dependencies</title>
      <link>http://digitalhistory.github.io/tools/node-dependencies/</link>
      <pubDate>Tue, 10 Sep 2019 12:03:57 -0400</pubDate>
      
      <guid>http://digitalhistory.github.io/tools/node-dependencies/</guid>
      <description>Node.js is an exquisite piece of programming infrastructure. One of its main features is support for developer-defined dependencies. As a programmer – or in my case, as a teacher – you can inform the underlying node package manager (npm) that your project &amp;ldquo;depends&amp;rdquo; on some group of other projects. This allows programmers to build constantly on each other&amp;rsquo;s work.
In our assignments, node dependencies are mostly used to enable the tests, whose main function is to help you figure out whether you&amp;rsquo;ve done the assignments correctly.</description>
    </item>
    
  </channel>
</rss>